@using Platini.Models
@model Cart
@{
    ViewBag.Title = "Process Order";
    Layout = "~/Areas/Common/Views/Shared/_Layout.cshtml";
}
<style>
    .highlight {
        background-color: yellow;
    }

    table td {
        vertical-align: middle!important;
    }

    #tableShoping td {
        padding: 3px 5px;
        color: #000;
    }

    #tableShoping tr {
        padding: 5px 0px;
    }

    .headerText {
        background: #BBBBBB;
        color: #663300 !important;
        font-weight: bold;
    }

    #packTable {
        margin-bottom: 1.5em;
        text-align: center;
    }

        #packTable td {
            padding: 0;
        }

    .bottomBar {
        background: none repeat scroll 0 0 #424240;
        bottom: 0;
        width: 100%;
        padding: 1em;
    }

    .cartShare {
        background-color: #fff;
        padding: 0.3em;
        border-radius: 5px;
        border: 1px solid #fff;
    }

        .cartShare:hover {
            border: 1px solid yellow;
        }

    .ui-dialog > .ui-widget-header {
        background: none repeat scroll 0 0 #012233;
        text-align: center;
    }

    .ui-dialog {
        -webkit-box-shadow: 0 0 5px 3px #999;
        -moz-box-shadow: 0 0 5px 3px #999;
        box-shadow: 0 0 5px 3px #999;
    }

    .ui-widget-content {
        background: #eeeeee;
        border: 1px solid #aaaaaa;
        color: #222222;
    }
</style>
<link rel="stylesheet" href="@Url.Content("~/Styles/style.css")" />
<div style="width: 80%; margin: 0 auto; float: none;">
    <div style="text-align: right">
        <a href="@Url.Action("Index", "Order", new { @area = "Common" })">Back</a>
    </div>
    @using (Html.BeginForm("ProcessOrder", "Order", FormMethod.Post, new { id = "processForm" }))
    {
        @Html.HiddenFor(m => Model.OrderId)
        @Html.HiddenFor(m => Model.UserId)
        <table id="tableShoping" style="border-collapse: collapse; margin-top: 1em; width: 100%; text-align: center;">
            <tr class="headerText">
                <td style="width: 40px;">
                    <a href="javascript:void(0);" class="achorshowhide" style="margin: 0px;">HideImage</a>
                </td>
                <td>Style</td>
                <td>Delivery</td>
                <td>Scale</td>
                <td>Scales</td>
                <td>Inseam</td>
                <td>Available Open Sizes</td>
                <td>Qty</td>
                <td></td>
            </tr>
            @for (int i = 0; i < Model.Clothes.Count; ++i)
            {
                bool first = false;
                for (int j = 0; j < Model.Clothes[i].Contents.Count; ++j)
                {
                    first = j == 0;
                <tr style="@(first ? "border-top: 1px solid #BFBF8E !important;" : "")">
                    <td>
                        @if (first)
                        {
                            <label style="margin: 0px; font-size: 12px;">@Model.Clothes[i].GroupName</label>
                        }

                        @if (!string.IsNullOrEmpty(Model.Clothes[i].Contents[j].Image))
                        {
                            <img src="@Url.Content("~/Library/Uploads/WebThumb/" + Model.Clothes[i].Contents[j].Image)" width="72" class="ClothImg" />
                        }
                        else
                        {
                            <img src="@Url.Content("~/Library/Uploads/WebThumb/NO_IMAGE.jpg")" width="72" class="ClothImg" />
                        }
                    </td>
                    <td>
                        <a href="@Url.Action("Detail", "Home", new { @id = Model.Clothes[i].Contents[j].ClothesId, @area = "" })"style="color:#000;" target="_blank">@Model.Clothes[i].Contents[j].StyleNumber</a>
                        @Html.HiddenFor(m => Model.Clothes[i].Contents[j].ClothesId)
                    </td>
                    <td></td>
                    <td colspan="8">
                        <table id="packTable" style="width: 100%;">
                            @for (int k = 0; k < Model.Clothes[i].Contents[j].SPs.Count; ++k)
                            {
                                bool wasFitShown = false;
                                <tr>
                                    @if (Model.Clothes[i].Contents[j].SPs[k].Pack != null || Model.Clothes[i].Contents[j].SPs[k].OpenSizes.Count > 0)
                                    {
                                        <td style="width: 15%">
                                            @if (Model.Clothes[i].Contents[j].SPs[k].Pack != null)
                                            {
                                                if (Model.Clothes[i].Contents[j].SPs[k].Pack.ClothesScaleId > 0 && Model.Clothes[i].Contents[j].SPs[k].Pack.ClothesId > 0 && Model.Clothes[i].Contents[j].SPs[k].Pack.OrderSSId != Guid.Empty)
                                                {
                                                <b>@Model.Clothes[i].Contents[j].SPs[k].Pack.Name</b>
                                                <div>
                                                    @Html.TextBoxFor(m => Model.Clothes[i].Contents[j].SPs[k].Pack.PurchasedQty, new { @class = "effect opCal_" + Model.Clothes[i].Contents[j].ClothesId + "_" + k, @onchange = "checkMePack(this," + Model.Clothes[i].Contents[j].SPs[k].Pack.PurchasedQty + ",'hidAP')", @datasum = Model.Clothes[i].Contents[j].SPs[k].Pack.QuantSum, @style = "border-radius:4px;background:#fff" })
                                                    @Html.HiddenFor(m => Model.Clothes[i].Contents[j].SPs[k].Pack.ClothesScaleId)
                                                    @Html.HiddenFor(m => Model.Clothes[i].Contents[j].SPs[k].Pack.OrderSSId)
                                                    @Html.HiddenFor(m => Model.Clothes[i].Contents[j].SPs[k].Pack.InvQty, new { @class = "hidAP", @dataval = Model.Clothes[i].Contents[j].ClothesId, @datarow = k })
                                                </div>
                                                }
                                            }
                                        </td>
                                            if (!string.IsNullOrEmpty(Model.Clothes[i].Contents[j].SPs[k].Fit))
                                            {
                                                wasFitShown = true;
                                        <td style="width: 15%">
                                            <select disabled="disabled" style="font-weight: normal; margin-top: 1em;">
                                                <option>@Model.Clothes[i].Contents[j].SPs[k].Fit</option>
                                            </select>
                                        </td>
                                            }
                                            else
                                            {
                                        <td style="width: 15%"></td>
                                            }

                                            if (!string.IsNullOrEmpty(Model.Clothes[i].Contents[j].SPs[k].Inseam))
                                            {<td style="width: 10%;">
                                                <select disabled="disabled" style="font-weight: normal; margin-top: 1em;">
                                                    <option>@Model.Clothes[i].Contents[j].SPs[k].Inseam</option>
                                                </select>
                                            </td>
                                            }
                                            else
                                            {
                                        <td style="@(wasFitShown ? "width: 10%" : "width: 10%")"></td>
                                            }
                                    
                                        <td style="width: 50%;">
                                            @if (Model.Clothes[i].Contents[j].SPs[k].OpenSizes.Count > 0)
                                            {
                                                <ul>
                                                    @for (int l = 0; l < Model.Clothes[i].Contents[j].SPs[k].OpenSizes.Count; l++)
                                                    {
                                                        <li style="float: left; list-style: none; text-align: center; padding: 3px 5px;">
                                                            <b>@Model.Clothes[i].Contents[j].SPs[k].OpenSizes[l].SizeName</b>
                                                            <div>
                                                                @if (Model.Clothes[i].Contents[j].SPs[k].OpenSizes[l].PurchasedQuantity.HasValue ? Model.Clothes[i].Contents[j].SPs[k].OpenSizes[l].PurchasedQuantity.Value > 0 : false)
                                                                {
                                                                    @Html.TextBoxFor(m => Model.Clothes[i].Contents[j].SPs[k].OpenSizes[l].PurchasedQuantity, new { @class = "effect opCal2_" + Model.Clothes[i].Contents[j].ClothesId + "_" + k + (Model.Clothes[i].Contents[j].SPs[k].OpenSizes[l].Quantity <= 0 ? " lackClass" : ""), @onchange = "checkMePack(this," + Model.Clothes[i].Contents[j].SPs[k].OpenSizes[l].PurchasedQuantity + ",'hidOS')", @style = "border-radius:4px;background:#fff" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.TextBox("txtEmpty", "X", new { @class = "effect", @style = "border-radius:4px;background:#fff", @disabled = "disabled" })
                                                                }
                                                                @Html.HiddenFor(m => Model.Clothes[i].Contents[j].SPs[k].OpenSizes[l].ClothesScaleSizeId)
                                                                @Html.HiddenFor(m => Model.Clothes[i].Contents[j].SPs[k].OpenSizes[l].Quantity, new { @class = "hidOS", @dataval = Model.Clothes[i].Contents[j].ClothesId, @datarow = k })
                                                                @Html.HiddenFor(m => Model.Clothes[i].Contents[j].SPs[k].OpenSizes[l].OrderSSId)
                                                                @Html.HiddenFor(m => Model.Clothes[i].Contents[j].SPs[k].OpenSizes[l].ClothesScaleId)
                                                            </div>
                                                        </li>
                                                    }

                                                </ul>
                                            }
                                        </td>
                                   
                                        <td style="width: 5%;">
                                            <label class="opCalQty@(Model.Clothes[i].Contents[j].SPs[k].isConfirmed ? " highlight" : "")" id="qty_@(Model.Clothes[i].Contents[j].ClothesId + "_" + k)" 
                                            onclick="confirmQuant(this,'@Model.Clothes[i].Contents[j].SPs[k].FitId','@Model.Clothes[i].Contents[j].SPs[k].InseamId');" 
                                            data-fit="@Model.Clothes[i].Contents[j].SPs[k].FitId" data-seam="@Model.Clothes[i].Contents[j].SPs[k].InseamId"
                                            style="margin-top: 0.5em;padding:0.3em;">@Model.Clothes[i].Contents[j].SPs[k].Quantity</label>
                                            @Html.CheckBoxFor(m => Model.Clothes[i].Contents[j].SPs[k].isConfirmed, new { style = "display:none;", @class = "confirmMeQuant" })
                                        </td>
                                   
                                        <td style="width: 10%;">
                                            @if (Model.Clothes[i].Contents[j].SPs[k].ShowPrepack && !ViewBag.isCustomer)
                                            {
                                                <input type="button" value="Break Prepack" class="btnbreak btnOrder" style="padding: 2px; color: rgb(255, 255, 255); background: rgb(0, 0, 0);white-space:normal;"
                                                 data-id="@Model.Clothes[i].Contents[j].ClothesId" data-fit="@Model.Clothes[i].Contents[j].SPs[k].FitId" data-seam="@Model.Clothes[i].Contents[j].SPs[k].InseamId" >
                                            }
                                        </td>
                                
                                    }
                                </tr>
                            }
                        </table>
                    </td>

                </tr>
                }
            }
        </table>
        <div class="bottomBar" style="margin-bottom: 6em;">
            <div style="width: 10%; display: inline-block;">
                <a href="javascript:void(0)" id="aPack">Packaging Info</a>
            </div>
            <div style="width: 50%; display: inline-block;">
                <label>Notes:@Html.TextBoxFor(m => m.Note)</label>
                @Html.Hidden("bbCount", (int)ViewBag.BBCount, new { @id = "hidCount" })
                @Html.HiddenFor(m => Model.PrintMe, new { @class = "hidPrintTrue" })
            </div>
            <div style="width: 30%; display: inline-block;" class="cartShare">
                <label style="padding-right: 2em">Total Qty <span id="tQty">@Model.TotalQty</span></label>
                <input type="button" value="Save/Close" id="btnSave" class="packButton" style="margin-right: 2em" />
                <input type="button" value="Save/Print" id="btnSaveP" class="packButton" />
            </div>
        </div>
    }
    <div id="dialog" title="Packing Info">
    </div>
</div>
<script type="text/javascript">
    $(function () {
        $("#dialog").dialog({
            autoOpen: false,
            modal: true,
            draggable: true,
            width: '45%',
            close: function () {
                $("#dialog").html('');
            }
        });
    });
    $("#aPack").click(function () {
        $.get("@Url.Action("BBDetails", "Order")", { Id: '@Model.OrderId' }).done(function (data) {
            $("#dialog").html(data);
            $("#dialog").dialog("open");
        });
    });
    $(".btnbreak").click(function () {
        $(this).parent().addClass("bgClass3");
        var Id = $(this).attr('data-id');
        var fId = $(this).attr('data-fit');
        var sId = $(this).attr('data-seam');
        $.post('@Url.Action("BreakPack", "Order")', { Id: Id, fId: fId, sId: sId, OrderId: '@Model.OrderId' }).done(function (data) {
            if (data == "success") {
                window.location = window.location.href;
            }
        });
    });
    $("#btnSave,#btnSaveP").click(function () {
        if ($(this).attr('id') == 'btnSaveP') {
            $(".hidPrintTrue").val("1");
        }
        if ($("#hidCount").val() == '0') {
            if (!confirm('Are you sure you want to submit this order without packing information?')) {
                //return;
            }
        }
        var ischeck = 1;
        if ($(".confirmMeQuant").length == $(".confirmMeQuant:checked").length) {
            ischeck = 0;
        }
        if (ischeck == 1) {
            if (confirm("You have unconfirmed quantities, do you want to create a back order?")) {
                $("#processForm").attr('action', '/Common/Order/BackOrder');
                $("#processForm").submit();
            }
            else {
                $("#processForm").submit();
            }
        }
        else {
            $("#processForm").submit();
        }
    });
    $(".achorshowhide").click(function () {
        $("img.ClothImg").toggle();
    });
    $(".numOnly").keydown(function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A
            (e.keyCode == 65 && e.ctrlKey === true) ||
            // Allow: home, end, left, right, down, up
            (e.keyCode >= 35 && e.keyCode <= 40)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    });
    function checkMePack(elm, oldVal, className) {
        var newVal = parseInt($(elm).val());
        var Id = $(elm).siblings("." + className).attr('dataval');
        var RowId = $(elm).siblings("." + className).attr('datarow');
        if (oldVal < newVal) {
            alert("You can't add more than " + oldVal + " quantities.");
            $(elm).val(oldVal);
        }
        doRowCalc(Id, RowId);
    }
    function doRowCalc(id, rowId) {
        var rowQ = 0;
        $(".opCal_" + id + "_" + rowId).each(function () {
            rowQ += (parseInt($(this).val()) * parseInt($(this).attr('datasum')));
        });
        $(".opCal2_" + id + "_" + rowId).each(function () {
            rowQ += parseInt($(this).val());
        });
        $("#qty_" + id + "_" + rowId).html(rowQ);
        doAllRowCal();
        if (rowQ == 0) {
            if ($("#qty_" + id + "_" + rowId).hasClass("highlight")) {
                alert("Can't confirm an item with 0 quantity.");
                var fId = $("#qty_" + id + "_" + rowId).attr('data-fit');
                var sId = $("#qty_" + id + "_" + rowId).attr('data-seam');
                $.post('@Url.Action("ConfirmQuantity", "Order")', { Id: id, fId: fId, sId: sId, OrderId: '@Model.OrderId' }).done(function (data) {
                    if (data == "success") {
                        $("#qty_" + id + "_" + rowId).toggleClass("highlight");
                        $("#qty_" + id + "_" + rowId).siblings("input[type='checkbox']").prop("checked", !$("#qty_" + id + "_" + rowId).siblings("input[type='checkbox']").prop("checked"));
                    }
                    $("#qty_" + id + "_" + rowId).parent().removeClass("bgClass3");
                });
            }
        }
    }
    function doAllRowCal() {
        var rowQ = 0;
        $(".opCalQty").each(function () {
            rowQ += parseInt($(this).html());
        });
        $("#tQty").html(rowQ);
    }
    function confirmQuant(elm, fId, sId) {
        var Id = $(elm).attr('id').split('_')[1];
        $(elm).parent().addClass("bgClass3");
        var val = parseInt($(elm).text());
        if (val > 0) {
            $.post('@Url.Action("ConfirmQuantity", "Order")', { Id: Id, fId: fId, sId: sId, OrderId: '@Model.OrderId' }).done(function (data) {
                if (data == "success") {
                    $(elm).toggleClass("highlight");
                    $(elm).siblings("input[type='checkbox']").prop("checked", !$(elm).siblings("input[type='checkbox']").prop("checked"));
                }
                $(elm).parent().removeClass("bgClass3");
            });
        }
        else {
            alert("Can't confirm an item with 0 quantity.");
            $(elm).parent().removeClass("bgClass3");
        }
    }
</script>
