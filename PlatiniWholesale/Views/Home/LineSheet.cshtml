@using MvcPaging
@using Platini.Models
@model IPagedList<LineSheetViewClass>
@{
    ViewBag.Title = "LineSheet";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}
@if (!string.IsNullOrEmpty(ViewBag.Header))
{
    <div class="topBarHeading">
        @ViewBag.Header
    </div>
}

@*<style>
    .click-nav2 {
        margin: 18px 0px 20px auto;        
        margin-right: 1px;
        width: 150px;
        float: right;
        border-radius: 10px;
    }

    .click-nav {
        margin: 18px auto;
        width: 100px;
        float: right;
        border-radius: 10px;
    }
</style>*@
@Html.Action("LineSheetCategory", "Home", new { @TypeId = ViewBag.TypeId })

@if (Model != null && Model.Count() > 0)
{
    <div id="linesheetDiv" class="container">
        @{var colors = new string[] { "Blue", "Red", "GoldenRod" };
        int colorIndex = 0;
        bool checkIndex = false;
        string FitName = "";
        bool EditMode = SiteConfiguration.Mode.ToLower() == ModeEnum.Edit.ToString().ToLower();
        bool OrderMode = SiteConfiguration.Mode.ToLower() == ModeEnum.Order.ToString().ToLower();
        }
        @if (EditMode && string.IsNullOrEmpty(ViewBag.isDeactive))
        {
            <div style="width: 15em; margin: 0 auto;padding: 10px 10px 0;">
                <a href="@Url.Action("MassUploadImages", new { TypeId = Model.FirstOrDefault().CategoryId })" id="massUp1" data-val="@ViewBag.Ids">Mass Image Upload</a>
            </div>
        }

        @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount, new { @TypeId = ViewBag.TypeId, @sortOrder = ViewBag.currentOrderParam, @sortColumn = ViewBag.sortColumnParam, searchString = ViewBag.searchStringParam, @Ids = ViewBag.Ids, @PageSize = ViewBag.PageSize, @future = ViewBag.isFuture, @deactive = ViewBag.isDeactive, @search = ViewBag.Search })

        <div class="sizenation clearfix" @(!string.IsNullOrEmpty(ViewBag.isDeactive) ? "style=float:left" : "")>
            @using (Html.BeginForm(null, null, FormMethod.Get, new { id = "pageForm" }))
            {
                if (!string.IsNullOrEmpty(ViewBag.isFuture))
                {
                    <a href="javascript:void(0);" id="showHideImagae">Hide Images</a>
                    if (EditMode)
                    {
                        <input id="activateClothes" type="button" class="topBarButton" value="Make Live" />
                    }
                }
                if (!string.IsNullOrEmpty(ViewBag.isDeactive))
                {
                    @*<input type="text" name="search" value="@ViewBag.Search" />
                        <input type="submit" value="Search" class="topBarButton" />*@
                    if (EditMode)
                    {
                        <input type="button" value="Delete Selected" class="topBarButton deletAll" style="width:120px;" />
                    }
                }
                if (!string.IsNullOrEmpty(ViewBag.search))
                {
                    @Html.Hidden("search", (string)ViewBag.search)
                }
                if (ViewBag.TypeId > 0)
                {
                    @Html.Hidden("TypeId", (int)ViewBag.TypeId, new { id = "typeId" })
                }
                if (!string.IsNullOrEmpty(ViewBag.isFuture))
                {
                    @Html.Hidden("future", (string)ViewBag.isFuture, new { id = "future1" })
                }
                if (!string.IsNullOrEmpty(ViewBag.isDeactive))
                {
                    @Html.Hidden("deactive", (string)ViewBag.isDeactive, new { id = "deactive1" })
                }
                <label>
                    Sort By:
                    <select name="SortBy" class="topBarSelect" onchange="javascript:$('#pageForm').submit();">
                        <option value="@((int)LineSheetSort.DateChanged)" @(ViewBag.SortBy == (int)LineSheetSort.DateChanged ? "selected=selected" : "")>Last Added</option>
                        <option value="@((int)LineSheetSort.FutureDelivery)" @(ViewBag.SortBy == (int)LineSheetSort.FutureDelivery ? "selected=selected" : "")>By Future date</option>
                        <option value="@((int)LineSheetSort.Category)" @(ViewBag.SortBy == (int)LineSheetSort.Category ? "selected=selected" : "")>By Category</option>
                    </select>
                </label>
                <select name="PageSize" class="topBarSelect" onchange="javascript:$('#pageForm').submit();">
                    <option value="10" @(ViewBag.PageSize == 10 ? "selected=selected" : "")>10</option>
                    <option value="20" @(ViewBag.PageSize == 20 ? "selected=selected" : "")>20</option>
                    <option value="50" @(ViewBag.PageSize == 50 ? "selected=selected" : "")>50</option>
                    <option value="100" @(ViewBag.PageSize == 100 ? "selected=selected" : "")>100</option>
                    <option value="250" @(ViewBag.PageSize == 250 ? "selected=selected" : "")>250</option>
                    <option value="0" @(ViewBag.PageSize == 0 ? "selected=selected" : "")>All</option>
                </select>
            }
        </div>
        <div class="col-md-6 col-lg-6 col-sm-6 pad_left">
            <div  style="width: 100%">
                @using (Html.BeginForm("LineSheetS", "Home", FormMethod.Post))
                {
                    if (!string.IsNullOrEmpty(ViewBag.isDeactive))
                    {
                        <div class="filter-block">
                            <div class="formblock">
                                <div class="block">
                                    <div class="formrow">
                                        Search by Style Number
                                    </div>
                                    <div class="formrow">
                                        <div class="feild">
                                            @Html.TextBox("search")
                                            @if (ViewBag.isDeactive != null)
                                            { @Html.Hidden("deactive", (string)ViewBag.isDeactive)}
                                            @if (ViewBag.TypeId != null)
                                            {@Html.Hidden("TypeId", (int)ViewBag.TypeId)}
                                        </div>
                                    </div>
                                    <div class="formrow">
                                        <div class="feild">
                                            <input id="searchBtn" class="cobtn" value="GO" type="submit" onclick="@Url.Action("LineSheetS", "Home", new { @TypeId = ViewBag.TypeId, @searchString = ViewBag.search, @deactive = ViewBag.isDeactive })" />
                                            <span style="float: left;">&nbsp;&nbsp;</span><input id="clearSearchBtn" class="cobtn" value="Clear" type="button" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="filter-block">
                            <div class="formblock">
                                <div class="block">
                                    <div class="formrow">
                                        Search by Style Number
                                    </div>
                                    <div class="formrow">
                                        <div class="feild">
                                            @Html.TextBox("search")
                                            @if (ViewBag.TypeId != null)
                                            { @Html.Hidden("TypeId", (int)ViewBag.TypeId)}
                                        </div>
                                    </div>
                                    <div class="formrow">
                                        <div class="feild">
                                            <input id="searchBtn" class="cobtn" value="GO" type="submit" style="height: 22px;" onclick="@Url.Action("LineSheetS", "Home", new { @TypeId = ViewBag.TypeId, @searchString = ViewBag.search })" />
                                            <span style="float: left;">&nbsp;&nbsp;</span><input id="clearSearchBtn" class="cobtn" value="Clear" type="button" style="height: 22px;" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
        <div style="clear:both;">

        </div>
        @if (!EditMode && !OrderMode)
        {
            <table style="width: 100%;">
                @for (int i = 0; i < Model.Count; ++i)
                {
                    <tr>
                        <td>
                            <div class="lineHeadContainer clearfix">
                                <div style="float: left;">
                                    @Html.CheckBoxFor(m => Model[i].isSelected, new { @class = "topBarCheck divCheck", @dataval = Model[i].ClothesId })
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-3">
                                    <label>Style @Html.TextBoxFor(m => Model[i].StyleNumber, new { @class = "topDivInput", @style = "width:10em", @disabled = "disabled" })</label>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-3">
                                    <label>Price $ @Html.TextBoxFor(m => Model[i].Price, Model[i].Price.ToString("F2"), new { @class = "topDivInput", @style = "width:5em;text-align:center;", @disabled = "disabled" })</label>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-3">
                                    <label>MSRP $ @Html.TextBoxFor(m => Model[i].MSRP, Model[i].MSRP.ToString("F2"), new { @class = "topDivInput", @style = "width:5em;text-align:center;", @disabled = "disabled" })</label>
                                </div>
                                <div class="col-lg-2 col-md-2 col-sm-2">
                                    <label>Color @Html.TextBoxFor(m => Model[i].Color, new { @class = "topDivInput", @style = "width:10em;text-align:center;", @disabled = "disabled" })</label>
                                </div>                               
                            </div>
                            <div class="lineBodyContainer clearfix">
                                <div class="col-lg-2 col-md-2 col-sm-2" style="padding: 5px 0 5px 5px;">
                                    <div class="@(!string.IsNullOrEmpty(ViewBag.isFuture)?" hideMe":"")">
                                        @if (Model[i].Images.Any())
                                        {
                                            <div style="border: 1px solid #424240;">
                                                <a href="@Url.Action("Detail", new { @id = Model[i].StyleNumber })">
                                                    <img class="img-responsive center-block" src="@Url.Content("~/Library/Uploads/WebThumb/" + Model[i].Images[0].ImagePath)" height="225" />
                                                </a>
                                            </div>
                                        }
                                        else
                                        {
                                            <div style="border: 1px solid #424240;">
                                                <a href="@Url.Action("Detail", new { @id = Model[i].StyleNumber })">
                                                    <img class="img-responsive center-block" src="@Url.Content("~/Library/Uploads/WebThumb/" + "NO_IMAGE.jpg")" height="225" />
                                                </a>
                                            </div>
                                        }
                                        @if (string.IsNullOrEmpty(ViewBag.isDeactive))
                                        {
                                            if (Model[i].Clearance > 0)
                                            {
                                                <img src="@Url.Content("~/Styles/images/btnClearance_color.png")" style="cursor:pointer;bottom:6px;right:0;position:absolute;display:block;Z-index:100;height:120px;">
                                            }
                                            else
                                            {
                                                <img src="@Url.Content("~/Styles/images/btnClearance.png")" style="cursor:pointer;bottom:6px;right:0;position:absolute;display:block;Z-index:100;height:120px;">
                                            }
                                        }
                                    </div>
                                </div>
                                <div class="col-lg-8 col-md-8 col-sm-8" style="padding:10px 0;">
                                    @for (int k = 0; k < Model[i].ClothesScale.Count; k++)
                                    {
                                        if (Model[i].ClothesScale[k].IsOpenSize == null)
                                        { }
                                        else
                                        {
                                            if (checkIndex != Model[i].ClothesScale[k].IsOpenSize.Value)
                                            {
                                                FitName = string.Empty;
                                            }
                                            if (Model[i].ClothesScale[k].IsOpenSize.Value == true)
                                            {
                                                <div title="Available Open Size" style=" width: 100%;">
                                                    <table style="margin:0 auto;">
                                                        @if (FitName != Model[i].ClothesScale[k].FitName)
                                                        {
                                                            colorIndex = 0;
                                                            <tr class="imP">
                                                                <td colspan="@(Model[i].ClothesScale[k].ClothesScaleSizeClass.Count() + 2)" style="color: #050508; text-align:center;">
                                                                    Available Open Sizes
                                                                </td>
                                                            </tr>
                                                            <tr class="imP">
                                                                <td style="padding-left: 5px; padding-top: 4px;@(Model[i].FitList.Any()?"min-width: 100px;":"")"></td>
                                                                <td style="padding-left: 5px; padding-top: 4px;@(Model[i].InseamList.Any() ? "min-width: 60px;" : "") ">
                                                                    <span style="font-weight: bold"></span>
                                                                </td>
                                                                @for (var j = 0; j < Model[i].ClothesScale[k].ClothesScaleSizeClass.Count(); j++)
                                                                {
                                                                    <td style="padding-left: 5px; padding-top: 4px;">
                                                                        <span style="font-weight: bold">@Html.DisplayFor(x => Model[i].ClothesScale[k].ClothesScaleSizeClass[j].SizeName)</span>
                                                                    </td>
                                                                }
                                                            </tr>
                                                        }
                                                        <tr style="color:@colors[colorIndex];">
                                                            <td style="padding-left: 5px; padding-top: 4px;@(Model[i].FitList.Any()?"min-width: 100px;":"")">
                                                                @Html.DisplayFor(x => Model[i].ClothesScale[k].FitName)
                                                            </td>
                                                            <td style="padding-left: 5px; padding-top: 4px; vertical-align: bottom;@(Model[i].InseamList.Any() ? "min-width: 60px;" : "")">
                                                                @Html.DisplayFor(x => Model[i].ClothesScale[k].InseamName)
                                                            </td>
                                                            @for (var j = 0; j < Model[i].ClothesScale[k].ClothesScaleSizeClass.Count(); j++)
                                                            {
                                                                <td style="padding-left: 5px; padding-top: 4px;">
                                                                    @if (Model[i].ClothesScale[k].ClothesScaleSizeClass[j].Quantity.HasValue ? Model[i].ClothesScale[k].ClothesScaleSizeClass[j].Quantity.Value > 0 : false)
                                                                    {
                                                                        <input type="text" disabled="disabled" value="@Model[i].ClothesScale[k].ClothesScaleSizeClass[j].Quantity" maxlength="3" class="effect numOnly opcal">
                                                                    }
                                                                    else
                                                                    {
                                                                        <input type="text" disabled="disabled" value="X" maxlength="3" style="color: black" class="effect numOnly opcal">
                                                                    }
                                                                </td>
                                                            }
                                                        </tr>
                                                    </table>
                                                </div>
                                            }
                                            else
                                            {
                                                <div title="Scale Matrix" style="width: 100%; ">
                                                    <table style="margin:0 auto;">
                                                        @if (FitName != Model[i].ClothesScale[k].FitName)
                                                        {
                                                            colorIndex = 0;
                                                            <tr class="imP">
                                                                <td colspan="@(Model[i].ClothesScale[k].ClothesScaleSizeClass.Count()+3)" style="color: #050508; text-align: center;">
                                                                    Scales
                                                                </td>
                                                            </tr>
                                                            <tr class="imP">
                                                                <td style="padding-left: 5px; padding-top: 4px; min-width: 40px;">
                                                                    <span style="font-weight: bold"></span>
                                                                </td>
                                                                <td style="padding-left: 5px; padding-top: 4px;@(Model[i].FitList.Any()?"min-width: 100px;":"");">
                                                                    @if (Model[i].FitList.Any())
                                                                    {
                                                                        <span style="font-weight: bold">Fit</span>
                                                                    }
                                                                </td>
                                                                <td style="padding-left: 5px; padding-top: 4px;@(Model[i].InseamList.Any()?"min-width: 60px;":"");">
                                                                    @if (Model[i].InseamList.Any())
                                                                    {
                                                                        <span style="font-weight: bold">Inseam</span>
                                                                    }
                                                                </td>
                                                                @for (var j = 0; j < Model[i].ClothesScale[k].ClothesScaleSizeClass.Count(); j++)
                                                                {
                                                                    <td style="padding-left: 5px; padding-top: 4px;">
                                                                        <span style="font-weight: bold">@Html.DisplayFor(x => Model[i].ClothesScale[k].ClothesScaleSizeClass[j].SizeName)</span>
                                                                    </td>
                                                                }
                                                                <td style="padding-left: 5px; padding-top: 4px; min-width: 65px;">
                                                                    <span style="font-weight: bold">Avl Qty</span>
                                                                </td>
                                                            </tr>
                                                        }
                                                        <tr style="color:@colors[colorIndex];">
                                                            <td style="padding-left: 5px; padding-top: 4px; vertical-align: bottom; min-width: 40px;">
                                                                @Html.DisplayFor(x => Model[i].ClothesScale[k].Name)
                                                            </td>
                                                            <td style="padding-left: 5px; padding-top: 4px;@(Model[i].FitList.Any()?"min-width: 100px;":"");">
                                                                @Html.DisplayFor(x => Model[i].ClothesScale[k].FitName)
                                                            </td>
                                                            <td style="padding-left: 5px; padding-top: 4px; vertical-align: bottom;@(Model[i].InseamList.Any()?"min-width: 60px;":"")">
                                                                @Html.DisplayFor(x => Model[i].ClothesScale[k].InseamName)
                                                            </td>
                                                            @for (var j = 0; j < Model[i].ClothesScale[k].ClothesScaleSizeClass.Count(); j++)
                                                            {
                                                                <td style="padding-left: 5px; padding-top: 4px;">
                                                                    @if (Model[i].ClothesScale[k].ClothesScaleSizeClass[j].Quantity.HasValue ? Model[i].ClothesScale[k].ClothesScaleSizeClass[j].Quantity.Value > 0 : false)
                                                                    {
                                                                        <input type="text" disabled="disabled" value="@Model[i].ClothesScale[k].ClothesScaleSizeClass[j].Quantity" maxlength="3" class="effect opcal">
                                                                    }
                                                                    else
                                                                    {
                                                                        <input type="text" disabled="disabled" value="X" maxlength="3" style="color: black" class="effect opcal">
                                                                    }
                                                                </td>
                                                            }
                                                            <td style="padding-left: 5px; padding-top: 4px; min-width: 65px;">
                                                                <input type="text" disabled="disabled" value="@Model[i].ClothesScale[k].InvQty.Value" maxlength="3" class="effect opcal">
                                                            </td>
                                                        </tr>
                                                    </table>
                                                </div>
                                            }
                                            colorIndex++;
                                            if (colorIndex > 2)
                                            { colorIndex = 0; }
                                            FitName = Model[i].ClothesScale[k].FitName;
                                            checkIndex = Model[i].ClothesScale[k].IsOpenSize.Value;
                                        }
                                    }
                                    @for (int j = 1; j < Model[i].Images.Count; ++j)
                                    {
                                        <div style="float: left; margin-left: 5px; border:1px solid #424240" @(!string.IsNullOrEmpty(ViewBag.isFuture) ? "class=hideMe" : "")>
                                            <img src="@Url.Content("~/Library/Uploads/WebThumb/" + Model[i].Images[j].ImagePath)" width="45" class="img-responsive" />
                                        </div>
                                    }
                                </div>
                                <div class="col-lg-2 col-md-2 col-sm-2" style="text-align: left; font-weight: bold; margin: 6em auto">
                                    @*Avl Inventory Quantity : @Html.DisplayFor(x => Model[i].TotalQty)*@
                                  Total Qty : @Html.DisplayFor(x => Model[i].TotalQty)
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </table>

        }
        else if (!EditMode && OrderMode)
        {
            using (Html.BeginForm("LineSheetShop", "Home", FormMethod.Post, new { @id = "linesheetForm" }))
            {
                <table id="linesheetShopTable" style="width: 100%;">
                    @for (int i = 0; i < Model.Count; ++i)
                    {
                        <tr>
                            <td>
                                <div class="lineHeadContainer clearfix">
                                    <div style="float: left;">
                                        @Html.CheckBoxFor(m => Model[i].isSelected, new { @class = "topBarCheck divCheck", @dataval = Model[i].ClothesId })
                                    </div>
                                    <div class="col-lg-3 col-md-3 col-sm-3">
                                        <label>Style @Html.TextBoxFor(m => Model[i].StyleNumber, new { @class = "topDivInput", @style = "width:10em", @disabled = "disabled" })</label>
                                    </div>
                                    <div class="col-lg-3 col-md-3 col-sm-3">
                                        <label>Price $ @Html.TextBoxFor(m => Model[i].Price, Model[i].Price.ToString("F2"), new { @class = "topDivInput", @style = "width:5em;text-align:center;", @disabled = "disabled" })</label>
                                    </div>
                                    <div class="col-lg-3 col-md-3 col-sm-3">
                                        <label>MSRP $ @Html.TextBoxFor(m => Model[i].MSRP, Model[i].MSRP.ToString("F2"), new { @class = "topDivInput", @style = "width:5em;text-align:center;", @disabled = "disabled" })</label>
                                    </div>

                                    <div class="col-lg-2 col-md-2 col-sm-2">
                                        <label>Color @Html.TextBoxFor(m => Model[i].Color, new { @class = "topDivInput", @style = "width:10em;text-align:center;", @disabled = "disabled" })</label>
                                    </div>
                                </div>
                                <div class="lineBodyContainer clearfix">
                                    <div class="col-lg-2 col-md-2 col-sm-2" style="padding: 5px 0 5px 5px;">
                                        <div class="@(!string.IsNullOrEmpty(ViewBag.isFuture)?" hideMe":"")">
                                            @if (Model[i].Images.Any())
                                            {
                                                <div style="border: 1px solid #424240;">
                                                    <a href="@Url.Action("Detail", new { @id = Model[i].StyleNumber })">
                                                        <img class="img-responsive center-block" src="@Url.Content("~/Library/Uploads/WebThumb/" + Model[i].Images[0].ImagePath)" height="225" />
                                                    </a>
                                                </div>

                                            }
                                            else
                                            {
                                                <div style="border: 1px solid #424240;">
                                                    <a href="@Url.Action("Detail", new { @id = Model[i].StyleNumber })">
                                                        <img class="img-responsive center-block" src="@Url.Content("~/Library/Uploads/WebThumb/" + "NO_IMAGE.jpg")" height="225" />
                                                    </a>
                                                </div>
                                            }
                                            @if (string.IsNullOrEmpty(ViewBag.isDeactive))
                                            {
                                                if (Model[i].Clearance > 0)
                                                {
                                                    <img src="@Url.Content("~/Styles/images/btnClearance_color.png")" style="cursor:pointer;bottom:6px;right:0;position:absolute;display:block;Z-index:100;height:120px;">
                                                }
                                                else
                                                {
                                                    <img src="@Url.Content("~/Styles/images/btnClearance.png")" style="cursor:pointer;bottom:6px;right:0;position:absolute;display:block;Z-index:100;height:120px;">
                                                }
                                            }
                                        </div>
                                    </div>
                                    @{bool showDdl = Model[i].FitList.Any();
                                    colorIndex = 0;
                                    }
                                    <div class="col-lg-8 col-md-8 col-sm-8" style="padding: 10px 0px;">
                                        @Html.HiddenFor(m => Model[i].ClothesId)
                                        @Html.HiddenFor(m => Model[i].CategoryId)
                                        @if (showDdl)
                                        {
                                            <div style="float: left; width: 30%; font-weight: bold; text-align: center; padding: 2em 0">
                                                <span style="text-align: center;">Fit:</span>
                                                <div>
                                                    @Html.DropDownListFor(m => Model[i].fitID, new SelectList(Model[i].FitList, "Id", "Value", 0), new { @class = "ddlSelect", dataid = Model[i].ClothesId })
                                                </div>
                                            </div>
                                        }
                                        <div style="@(showDdl ? "float:right;width:70%" : "padding-left:35%;")">
                                            @if (Model[i].ClothesScale.Any(x => x.IsOpenSize == true))
                                            {
                                                <table class="openSize">
                                                    <tr class="imP">
                                                        <td></td>
                                                        <td colspan="@(Model[i].ClothesScale.FirstOrDefault(x => x.IsOpenSize == true).ClothesScaleSizeClass.Count())" style="text-align:center;">
                                                            Available Open Sizes
                                                        </td>
                                                    </tr>
                                                    <tr class="imP">
                                                        <td style="padding-left: 5px; padding-top: 4px; min-width: 40px;"></td>
                                                        @for (int o = 0; o < Model[i].ClothesScale.FirstOrDefault(x => x.IsOpenSize == true).ClothesScaleSizeClass.Count; o++)
                                                        {
                                                            <td style="padding-left: 5px; padding-top: 4px; min-width: 40px; text-align: center;">
                                                                <span style="font-weight: bold">@Html.DisplayFor(m => Model[i].ClothesScale.FirstOrDefault(x => x.IsOpenSize == true).ClothesScaleSizeClass[o].SizeName)</span>
                                                            </td>

                                                        }
                                                    </tr>
                                                    @for (int d = 0; d < Model[i].ClothesScale.Count(); d++)
                                                    {
                                                        if (Model[i].ClothesScale[d].IsOpenSize == true)
                                                        {
                                                            <tr class="@Model[i].ClothesScale[d].FitId">
                                                                <td style="padding-left: 5px; padding-top: 4px; vertical-align: bottom; min-width: 60px;">
                                                                    @Html.DisplayFor(x => Model[i].ClothesScale[d].InseamName)
                                                                    @Html.HiddenFor(m => Model[i].ClothesScale[d].ClothesScaleId)
                                                                    @Html.HiddenFor(m => Model[i].ClothesScale[d].IsOpenSize)
                                                                    @Html.HiddenFor(m => Model[i].ClothesScale[d].FitId)
                                                                </td>
                                                                @for (int o = 0; o < Model[i].ClothesScale[d].ClothesScaleSizeClass.Count; o++)
                                                                {
                                                                    <td style="padding-left: 5px; padding-top: 4px; min-width: 40px; text-align: center;">
                                                                        @if (Model[i].ClothesScale[d].ClothesScaleSizeClass[o].Quantity > 0)
                                                                        {
                                                                            @Html.TextBoxFor(m => Model[i].ClothesScale[d].ClothesScaleSizeClass[o].PurchasedQuantity, new { @class = "effect qty numOnly opcal1 txtOs" + Model[i].ClothesId, @style = "background:#fff", dataprc = Model[i].Price.ToString("F2"), dataid = Model[i].ClothesId })
                                                                        }
                                                                        else
                                                                        {
                                                                            @Html.TextBox("NoAvl", "X", new { @disabled = "disabled", @class = "effect" })
                                                                        }
                                                                        @Html.HiddenFor(m => Model[i].ClothesScale[d].ClothesScaleSizeClass[o].Quantity, new { @class = "hidOs" })
                                                                        @Html.HiddenFor(m => Model[i].ClothesScale[d].ClothesScaleSizeClass[o].ClothesScaleSizeId)
                                                                        @Html.HiddenFor(m => Model[i].ClothesScale[d].ClothesScaleSizeClass[o].SizeName)
                                                                    </td>

                                                                }
                                                            </tr>
                                                        }
                                                    }
                                                </table>
                                            }
                                        </div>
                                        <div style="@(showDdl?"clear: both;":"")">
                                            @for (int j = 1; j < Model[i].Images.Count; ++j)
                                            {
                                                <div style="float: left;@(j==1?"margin-left:5px;":"")margin-right: 5px;border: 1px solid #424240;" @(!string.IsNullOrEmpty(ViewBag.isFuture) ? "class=hideMe" : "")>
                                                    <img src="@Url.Content("~/Library/Uploads/WebThumb/" + Model[i].Images[j].ImagePath)" width="45" class="img-responsive" />
                                                </div>
                                            }
                                            @if (Model[i].ClothesScale.Any(x => (x.IsOpenSize == false) && (!string.IsNullOrEmpty(x.Name)) && (x.InvQty.HasValue ? x.InvQty.Value > 0 : false) && (x.ClothesScaleSizeClass.Sum(y => y.Quantity) > 0)))
                                            {
                                                <table class="prePack" style="margin: 10px 20%;">
                                                    <tr class="imP">
                                                        <td colspan="3"></td>
                                                        <td style="text-align:center;" colspan="@(Model[i].ClothesScale.FirstOrDefault(x => x.IsOpenSize == false && !string.IsNullOrEmpty(x.Name) && (x.InvQty.HasValue ? x.InvQty.Value > 0 : false) && x.ClothesScaleSizeClass.Sum(y => y.Quantity) > 0).ClothesScaleSizeClass.Count + 1)">
                                                            Available Pre-Packs:
                                                        </td>
                                                        <td style="text-align: center;min-width: 100px;">Order Pre-Pack:</td>
                                                    </tr>
                                                    <tr class="imP">
                                                        <td colspan="3"></td>
                                                        @for (int j = 0; j < Model[i].ClothesScale.FirstOrDefault(x => (x.IsOpenSize == false) && (!string.IsNullOrEmpty(x.Name)) && (x.InvQty.HasValue ? x.InvQty.Value > 0 : false) && (x.ClothesScaleSizeClass.Sum(y => y.Quantity) > 0)).ClothesScaleSizeClass.Count; j++)
                                                        {
                                                            <td style="padding-left: 5px; padding-top: 4px; min-width: 40px; text-align: center;">
                                                                <span style="font-weight: bold">
                                                                    @Html.DisplayFor(m => Model[i].ClothesScale.FirstOrDefault(x => (x.IsOpenSize == false) && (!string.IsNullOrEmpty(x.Name)) && (x.InvQty.HasValue ? x.InvQty.Value > 0 : false) && (x.ClothesScaleSizeClass.Sum(y => y.Quantity) > 0)).ClothesScaleSizeClass[j].SizeName)
                                                                </span>
                                                            </td>
                                                        }
                                                        <td style="padding-left: 5px; padding-top: 4px; min-width: 40px; text-align: center;">
                                                            <span style="font-weight: bold">Total </span>
                                                        </td>
                                                        <td></td>
                                                    </tr>
                                                    @for (int k = 0; k < Model[i].ClothesScale.Count(); k++)
                                                    {
                                                        if ((Model[i].ClothesScale[k].IsOpenSize == false) && (Model[i].ClothesScale[k].InvQty.HasValue ? Model[i].ClothesScale[k].InvQty.Value > 0 : false) && !string.IsNullOrEmpty(Model[i].ClothesScale[k].Name) && (Model[i].ClothesScale[k].ClothesScaleSizeClass.Sum(x => x.Quantity) > 0))
                                                        {
                                                            if (FitName != Model[i].ClothesScale[k].FitName || colorIndex > 2)
                                                            {
                                                                colorIndex = 0;
                                                            }
                                                            <tr class="@Model[i].ClothesScale[k].FitId" style="color:@colors[colorIndex];">
                                                                <td style="padding-left: 5px;min-width: 60px;">Scale @Model[i].ClothesScale[k].Name </td>
                                                                <td style="padding-left: 5px;min-width: 100px;">@Model[i].ClothesScale[k].FitName </td>
                                                                <td style="padding-left: 5px;">
                                                                    @Model[i].ClothesScale[k].InseamName
                                                                    @Html.HiddenFor(m => Model[i].ClothesScale[k].ClothesScaleId)
                                                                    @Html.HiddenFor(m => Model[i].ClothesScale[k].IsOpenSize)
                                                                    @Html.HiddenFor(m => Model[i].ClothesScale[k].FitId)
                                                                </td>

                                                                @for (int l = 0; l < Model[i].ClothesScale[k].ClothesScaleSizeClass.Count; l++)
                                                                {
                                                                    <td style="padding-left: 5px; padding-top: 4px; min-width: 40px; text-align: center;">
                                                                        <span style="font-weight: bold">
                                                                            @if (Model[i].ClothesScale[k].ClothesScaleSizeClass[l].Quantity > 0)
                                                                            {
                                                                                @Html.TextBoxFor(m => Model[i].ClothesScale[k].ClothesScaleSizeClass[l].Quantity, new { @disabled = "disabled", @class = "effect qty opcal" })
                                                                            }
                                                                            else
                                                                            {
                                                                                @Html.TextBoxFor(m => Model[i].ClothesScale[k].ClothesScaleSizeClass[l].Quantity, "X", new { @disabled = "disabled", @class = "effect", @style = "color:#000" })
                                                                            }
                                                                        </span>
                                                                    </td>
                                                                }

                                                                <td style="padding-left: 5px; padding-top: 4px; min-width: 40px; text-align: center;">
                                                                    <span style="font-weight: bold">
                                                                        @Html.TextBox("TotalPack", Model[i].ClothesScale[k].ClothesScaleSizeClass.Sum(x => x.Quantity), new { @disabled = "disabled", @class = "effect qty opcal" })
                                                                    </span>
                                                                </td>
                                                                <td style="padding-left: 5px; padding-top: 4px; min-width: 40px; text-align: center;">
                                                                    <span style="font-weight: bold">
                                                                        @Html.TextBoxFor(m => Model[i].ClothesScale[k].PurchasedQty, new { @class = "effect qty numOnly opcal2 txtAp" + Model[i].ClothesId, @style = "background:#fff;color:#000", dataprc = Model[i].Price.ToString("F2"), dataid = Model[i].ClothesId, @title = Model[i].ClothesScale[k].ClothesScaleSizeClass.Sum(x => x.Quantity) })
                                                                        @Html.HiddenFor(m => Model[i].ClothesScale[k].InvQty, new { @class = "hidAp" })
                                                                    </span>
                                                                </td>
                                                            </tr>
                                                                ++colorIndex;
                                                                FitName = Model[i].ClothesScale[k].FitName;
                                                        }
                                                    }
                                                </table>
                                            }
                                        </div>
                                        <div style="padding: 2em 2em 0 0; text-align: right; font-weight: bold">
                                            Total Order Qty: <span class="lblQuant@(Model[i].ClothesId)">0</span> 	Total: $<span class="lblTotal@(Model[i].ClothesId)"> 0.00</span>
                                        </div>

                                    </div>
                                    <div class="col-lg-2 col-md-2 col-sm-2" style="text-align: left; font-weight: bold; margin: 6em auto">
                                        @*Avl Inventory Quantity : @Html.DisplayFor(x => Model[i].TotalQty)*@
                                        Total Qty : @Html.DisplayFor(x => Model[i].TotalQty)
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </table>
            }
        }
        else
        {
            using (Html.BeginForm("LineSheet", "Home", FormMethod.Post, new { @id = "linesheetForm" }))
            {
                <table id="linesheetTable" style="width: 100%;">
                    @for (int i = 0; i < Model.Count; ++i)
                    {

                        <tr class="maintr">
                            <td>
                                @Html.HiddenFor(x => Model[i].ClothesId)
                                @Html.HiddenFor(x => Model[i].CategoryId)
                                <div class="lineHeadContainer clearfix">
                                    <div style="float: left;">
                                        @Html.CheckBoxFor(m => Model[i].isSelected, new { @class = "topBarCheck divCheck", dataval = Model[i].ClothesId })
                                    </div>
                                    <div class="col-lg-2 col-md-2 col-sm-2">
                                        <label>Style @Html.TextBoxFor(m => Model[i].StyleNumber, new { @class = "topDivInput checkMe", @style = "width:10em", })</label>
                                    </div>
                                    <div class="col-lg-2 col-md-2 col-sm-2">
                                        <label>Price $ @Html.TextBoxFor(m => Model[i].Price, Model[i].Price.ToString("F2"), new { @class = "topDivInput checkMe", @style = "width:5em;" })</label>
                                    </div>
                                    <div class="col-lg-2 col-md-2 col-sm-2">
                                        <label>MSRP $ @Html.TextBoxFor(m => Model[i].MSRP, Model[i].MSRP.ToString("F2"), new { @class = "topDivInput checkMe", @style = "width:5em;" })</label>
                                    </div>
                                    <div class="col-lg-2 col-md-2 col-sm-2">
                                        <label>Disc. Price $ @Html.TextBoxFor(m => Model[i].DiscountedPrice, Model[i].DiscountedPrice.Value.ToString("F2"), new { @class = "topDivInput checkMe", @style = "width:5em;" })</label>
                                    </div>
                                    <div class="col-lg-2 col-md-2 col-sm-2">
                                        <label>Disc. MSRP $ @Html.TextBoxFor(m => Model[i].DiscountedMSRP, Model[i].DiscountedMSRP.Value.ToString("F2"), new { @class = "topDivInput checkMe", @style = "width:5em;" })</label>
                                    </div>

                                    <div class="col-lg-2 col-md-2 col-sm-2">
                                        <label>Delivery @Html.TextBoxFor(m => Model[i].fDate, new { @class = "topDivInput datePick checkMe", @style = "width:9em;" })</label>
                                    </div>
                                    <div class="col-lg-3 col-md-3 col-sm-3">
                                        <label>Color @Html.TextBoxFor(m => Model[i].Color, new { @class = "topDivInput checkMe", @style = "width:10em;" })</label>
                                    </div>
                                     <div class="col-lg-2 col-md-2 col-sm-2">
                                    <label>Active @Html.CheckBoxFor(m => Model[i].isActive, new { @class = "topBarCheck checkMe", @style = "width:8em;text-align:center;" })</label>
                                </div>
                                </div>
                                <div class="lineBodyContainer clearfix">
                                    <div class="col-lg-2 col-md-2 col-sm-2" style="padding: 5px 0 5px 5px;">
                                        <div class="@(!string.IsNullOrEmpty(ViewBag.isFuture)?" hideMe":"")">
                                            <div id="loaderDiv@(Model[i].ClothesId)" class="loadcontent" style="display: none;">
                                                <img style="" src="@Url.Content("~/Styles/image/platinipreloader2.gif")">
                                            </div>
                                            @if (Model[i].Images.Any())
                                            {
                                                <div style="border: 1px solid #424240;">
                                                    <a href="@Url.Action("Detail", new { @id = Model[i].StyleNumber })">
                                                        <img class="img-responsive center-block" src="@Url.Content("~/Library/Uploads/WebThumb/" + Model[i].Images[0].ImagePath)" height="225" />
                                                    </a>
                                                </div>
                                            }
                                            else
                                            {
                                                <div style="border: 1px solid #424240;">
                                                    <a href="@Url.Action("Detail", new { @id = Model[i].StyleNumber })">
                                                        <img class="img-responsive center-block" src="@Url.Content("~/Library/Uploads/WebThumb/" + "NO_IMAGE.jpg")" height="225" />
                                                    </a>
                                                </div>
                                            }
                                            @if (string.IsNullOrEmpty(ViewBag.isDeactive))
                                            {
                                                if (Model[i].Clearance > 0)
                                                {
                                                    <img class="imgClearance" src="@Url.Content("~/Styles/images/btnClearance_color.png")" data-id="@Model[i].ClothesId" style="cursor:pointer;bottom:27px;right:0;position:absolute;display:block;Z-index:100;height:120px;">
                                                }
                                                else
                                                {
                                                    <img class="imgClearance" src="@Url.Content("~/Styles/images/btnClearance.png")" data-id="@Model[i].ClothesId" style="cursor:pointer;bottom:27px;right:0;position:absolute;display:block;Z-index:100;height:120px;">
                                                }
                                            }
                                            @Html.HiddenFor(m => Model[i].Clearance, new { @class = "checkMe clearance_" + Model[i].ClothesId })
                                            @if (!ViewBag.MassMode)
                                            {
                                                <a href="javascript:void(0);" class="aImages" data-val="@Model[i].ClothesId">Upload Images</a>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-lg-8 col-md-8 col-sm-8" style="padding: 10px 0;">
                                        <div style="padding: 0.5em; margin-bottom: 0.5em; text-align: right;">
                                            <a href="javascript:void(0)" data-val="@Model[i].ClothesId" data-cat="@Model[i].CategoryId" class="lineSheetEditBtn aRelcolor">Related Colors</a>
                                            <a href="javascript:void(0)" data-val="@Model[i].ClothesId" class="lineSheetEditBtn aRelProd">Related Products</a>
                                            <a href="@Url.Action("Step1", "Clothes", new { id = Model[i].ClothesId, @area = "Common" })" target="_blank" class="lineSheetEditBtn">Full Edit</a>
                                            <a href="javascript:void(0);" data-val="@string.Format("{0}-{1}-{2}", Model[i].ClothesId, i, Model[i].ClothesScale.Count())" class="lineSheetEditBtn AddNewScale">Add New Scale</a>
                                            @*@Ajax.ActionLink("Add New Scale", "AddNewScale", "Home", new { @id=Model[i].ClothesId, @cid = i, @gid= Model[i].ClothesScale.Count()}, new AjaxOptions()
                                                {
                                                   InsertionMode = InsertionMode.InsertAfter,
                                                   UpdateTargetId = string.Format("dv{0}",Model[i].ClothesId)
                                                }, new { @class = "lineSheetEditBtn" })      *@
                                        </div>
                                        @for (int k = 0; k < Model[i].ClothesScale.Count; k++)
                                        {
                                            if (Model[i].ClothesScale[k].IsOpenSize == null)
                                            { }
                                            else
                                            {
                                                if (checkIndex != Model[i].ClothesScale[k].IsOpenSize.Value)
                                                {
                                                    FitName = string.Empty;
                                                }
                                                if (Model[i].ClothesScale[k].IsOpenSize.Value == true)
                                                {
                                                    <div title="Available Open Size">
                                                        <table style="margin:0 auto;">
                                                            @if (FitName != Model[i].ClothesScale[k].FitName)
                                                            {
                                                                colorIndex = 0;

                                                                <tr class="imP">
                                                                    <td colspan="@(Model[i].ClothesScale[k].ClothesScaleSizeClass.Count() + 2)" style="color: #050508;text-align: center;">
                                                                        Available Open Sizes
                                                                    </td>
                                                                </tr>
                                                                <tr class="imP">
                                                                    <td style="padding-left: 5px; padding-top: 4px; @(Model[i].FitList.Any()?"min-width: 100px;":"")"></td>
                                                                    <td style="padding-left: 5px; padding-top: 4px;@(Model[i].InseamList.Any() ? " min-width: 60px;" : "")">
                                                                        <span style="font-weight: bold"></span>
                                                                    </td>
                                                                    @for (var j = 0; j < Model[i].ClothesScale[k].ClothesScaleSizeClass.Count(); j++)
                                                                    {
                                                                        <td style="padding-left: 5px; padding-top: 4px;">
                                                                            <span style="font-weight: bold">@Html.DisplayFor(x => Model[i].ClothesScale[k].ClothesScaleSizeClass[j].SizeName)</span>
                                                                        </td>
                                                                    }
                                                                </tr>
                                                            }
                                                            <tr style="color:@colors[colorIndex];">
                                                                <td style="padding-left: 5px; padding-top: 4px; @(Model[i].FitList.Any()?"min-width: 100px;":"")">@Html.DisplayFor(x => Model[i].ClothesScale[k].FitName)</td>
                                                                <td style="padding-left: 5px; padding-top: 4px; vertical-align: bottom;@(Model[i].InseamList.Any() ? " min-width: 60px;" : "")">
                                                                    @Html.DisplayFor(x => Model[i].ClothesScale[k].InseamName)
                                                                </td>
                                                                @for (var j = 0; j < Model[i].ClothesScale[k].ClothesScaleSizeClass.Count(); j++)
                                                                {
                                                                    <td style="padding-left: 5px; padding-top: 4px;">
                                                                        @Html.TextBoxFor(m => Model[i].ClothesScale[k].ClothesScaleSizeClass[j].Quantity, new { @maxlength = "3", @class = "effect numOnly opcal checkMe" })
                                                                        @Html.HiddenFor(x => Model[i].ClothesScale[k].ClothesScaleSizeClass[j].SizeId)
                                                                        @Html.HiddenFor(x => Model[i].ClothesScale[k].ClothesScaleSizeClass[j].ClothesScaleId)
                                                                        @Html.HiddenFor(x => Model[i].ClothesScale[k].ClothesScaleSizeClass[j].ClothesScaleSizeId)
                                                                    </td>
                                                                }
                                                            </tr>
                                                        </table>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div title="Scale Matrix">
                                                        <table style="margin:0 auto;">
                                                            @if (FitName != Model[i].ClothesScale[k].FitName)
                                                            {
                                                                colorIndex = 0;
                                                                <tr class="imP">
                                                                    <td colspan="@(Model[i].ClothesScale[k].ClothesScaleSizeClass.Count()+3)" style="color: #050508;    text-align: center;">
                                                                        Scales
                                                                    </td>
                                                                </tr>
                                                                <tr class="imP">
                                                                    <td style="padding-left: 5px; padding-top: 4px; min-width: 40px;">
                                                                        <span style="font-weight: bold"></span>
                                                                    </td>
                                                                    <td style="padding-left: 5px; padding-top: 4px;@(Model[i].FitList.Any()?"min-width: 100px;":"")">
                                                                        @if (Model[i].FitList.Any())
                                                                        {
                                                                            <span style="font-weight: bold">Fit</span>
                                                                        }
                                                                    </td>
                                                                    <td style="padding-left: 5px; padding-top: 4px;@(Model[i].InseamList.Any() ? "min-width: 60px;" : "")">
                                                                        @if (Model[i].InseamList.Any())
                                                                        {
                                                                            <span style="font-weight: bold">Inseam</span>
                                                                        }
                                                                    </td>
                                                                    @for (var j = 0; j < Model[i].ClothesScale[k].ClothesScaleSizeClass.Count(); j++)
                                                                    {
                                                                        <td style="padding-left: 5px; padding-top: 4px;">
                                                                            <span style="font-weight: bold">@Html.DisplayFor(x => Model[i].ClothesScale[k].ClothesScaleSizeClass[j].SizeName)</span>
                                                                        </td>
                                                                    }
                                                                    <td style="padding-left: 5px; padding-top: 4px; min-width: 65px;">
                                                                        <span style="font-weight: bold">Avl Qty</span>
                                                                    </td>
                                                                </tr>
                                                            }
                                                            <tr style="color:@colors[colorIndex];">
                                                                <td style="padding-left: 5px; padding-top: 4px; vertical-align: bottom; min-width: 40px;">
                                                                    @Html.DisplayFor(x => Model[i].ClothesScale[k].Name)
                                                                </td>
                                                                <td style="padding-left: 5px; padding-top: 4px;@(Model[i].FitList.Any()?"min-width: 100px;":"")">
                                                                    @Model[i].ClothesScale[k].FitName
                                                                </td>
                                                                <td style="padding-left: 5px; padding-top: 4px;@(Model[i].InseamList.Any() ? "min-width: 60px;" : "")">
                                                                    @Html.DisplayFor(x => Model[i].ClothesScale[k].InseamName)
                                                                </td>
                                                                @for (var j = 0; j < Model[i].ClothesScale[k].ClothesScaleSizeClass.Count(); j++)
                                                                {
                                                                    <td style="padding-left: 5px; padding-top: 4px;">
                                                                        @Html.TextBoxFor(m => Model[i].ClothesScale[k].ClothesScaleSizeClass[j].Quantity, new { @maxlength = "3", @class = "effect opcal checkMe" })
                                                                        @Html.HiddenFor(x => Model[i].ClothesScale[k].ClothesScaleSizeClass[j].SizeId)
                                                                        @Html.HiddenFor(x => Model[i].ClothesScale[k].ClothesScaleSizeClass[j].ClothesScaleId)
                                                                        @Html.HiddenFor(x => Model[i].ClothesScale[k].ClothesScaleSizeClass[j].ClothesScaleSizeId)
                                                                    </td>
                                                                }
                                                                <td style="padding-left: 5px; padding-top: 4px; min-width: 65px;">
                                                                    @Html.TextBoxFor(m => Model[i].ClothesScale[k].InvQty, new { @maxlength = "3", @class = "effect opcal checkMe" })
                                                                </td>
                                                            </tr>
                                                        </table>
                                                    </div>
                                                }
                                                checkIndex = Model[i].ClothesScale[k].IsOpenSize.Value;
                                            }
                                            colorIndex++;
                                            if (colorIndex > 2)
                                            { colorIndex = 0; }
                                            FitName = Model[i].ClothesScale[k].FitName;

                                            @Html.HiddenFor(x => Model[i].ClothesScale[k].ClothesId)

                                            @Html.HiddenFor(x => Model[i].ClothesScale[k].ClothesScaleId)
                                            @Html.HiddenFor(x => Model[i].ClothesScale[k].FitId)
                                            @Html.HiddenFor(x => Model[i].ClothesScale[k].InseamId)
                                            @Html.HiddenFor(x => Model[i].ClothesScale[k].IsOpenSize)

                                        }

                                        @for (int j = 1; j < Model[i].Images.Count; ++j)
                                        {
                                            <div style="float: left; margin-left: 5px; border:1px solid #424240" @(!string.IsNullOrEmpty(ViewBag.isFuture) ? "class=hideMe" : "")>
                                                <img src="@Url.Content("~/Library/Uploads/WebThumb/" + Model[i].Images[j].ImagePath)" width="45" class="img-responsive" />
                                            </div>
                                        }
                                    </div>
                                    <div class="col-lg-2 col-md-2 col-sm-2" style="text-align: left; font-weight: bold; margin: 6em auto">
                                        Avl Inventory Quantity : @Html.DisplayFor(x => Model[i].TotalQty)
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </table>
                @Html.Hidden("TotalClothes", Model.Count)
            }
            if (ViewBag.MassMode)
            {
                <div style="text-align: center;">
                    <input type="button" id="SaveNewId" style="background-color: #252523 !important; border: 1px solid #d6cbaf; border-radius: 5px; color: #ffffff !important; margin-top: 5px; padding: 4px;" value="Add Another Template" />
                    <input type="button" id="SaveAllIds" style="background-color: #252523 !important; border: 1px solid #d6cbaf; border-radius: 5px; color: #ffffff !important; margin-top: 5px; padding: 4px;" value="Save/Display" />
                    <input type="button" id="AddNewIds" style="background-color: #252523 !important; border: 1px solid #d6cbaf; border-radius: 5px; color: #ffffff !important; margin-top: 5px; padding: 4px;" value="Add New" />
                </div>
            }
            <div id="RelatedProductDialog" title="Related Product" style="display: none"></div>
            <div id="RelatedColorDialog" title="Related Colors" style="display: none; font-size: 12px;"></div>
            <div id="my_popup" title="Upload Images"></div>
        }
        @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount, new { @TypeId = ViewBag.TypeId, @sortOrder = ViewBag.currentOrderParam, @sortColumn = ViewBag.sortColumnParam, searchString = ViewBag.searchStringParam, @Ids = ViewBag.Ids, @PageSize = ViewBag.PageSize, @future = ViewBag.isFuture, @deactive = ViewBag.isDeactive, @search = ViewBag.Search })

    </div>
    <div id="dialog" style="font-size: 12px;">
        <table>
            <tr>
                <td colspan="2">Separate email address with comma(,)in the case of multiple email addresses.</td>
            </tr>
            <tr>
                <td colspan="2" style="height: 20px;"></td>
            </tr>
            <tr>
                <td>
                    Address
                </td>
                <td>
                    <input type="text" id="txtAddress" class="txtbx" />
                </td>
            </tr>
            <tr>
                <td colspan="2" style="height: 10px;"></td>
            </tr>
            <tr>
                <td>
                    Subject
                </td>
                <td>
                    <input type="text" id="txtSubject" class="txtbx" />
                </td>
            </tr>
            <tr>
                <td colspan="2" style="height: 10px;"></td>
            </tr>
            <tr>
                <td>
                    Message
                </td>
                <td>
                    <textarea rows="4" id="txtMessage" class="txtbx"></textarea>
                </td>
            </tr>
            <tr>
                <td colspan="2" style="height: 20px;">
                    <label style="padding-left: 8.1em;">
                        <input type="checkbox" class="topBarCheck" id="hideInfo" />Hide company info
                    </label>
                    @Html.Hidden("sendIds", "", new { id = "sendIds" })
                    @Html.Hidden("inMode", SiteConfiguration.Mode, new { id = "inMode" })
                    @Html.Hidden("future1", (!string.IsNullOrEmpty(ViewBag.isFuture) ? "1" : ""), new { id = "future" })
                    @Html.Hidden("deactive1", (!string.IsNullOrEmpty(ViewBag.isDeactive) ? "1" : ""), new { id = "deactive" })
                </td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td>
                    <input id="btnSubmitEmail" type="button" value=" Send Email " class="save-btn" style="width: 110px; float: right; margin-right: 60px;" />
                </td>
            </tr>
        </table>
    </div>
    <br />
}

<script type="text/javascript">

    $(function () {
        $(".pagination a").each(function () {
            if ($(this).text().trim().length == 0)
                $(this).hide();
        });
        jQuery.fn.extend({
            toggleText: function (a, b) {
                var that = this;
                if (that.text() != a && that.text() != b) {
                    that.text(a);
                }
                else
                    if (that.text() == a) {
                        that.text(b);
                    }
                    else
                        if (that.text() == b) {
                            that.text(a);
                        }
                return this;
            }
        });
        $("input[type='text'].qty").each(function () {
            if (parseInt($(this).val()) == 0) {
                $(this).val("X");
                $(this).css("color", "black");
            }
        });
        $(".datePick").datepicker();
        $(".ddlSelect").each(function () {
            if ($(this).length != 0) {
                var className = $(this).val();
                var opensizeTable = $(this).parent().parent().siblings("div").first().find("table");
                opensizeTable.find("tr").each(function (i, tr) {
                    if ($(this).hasClass(className) == false) {
                        if ($(this).hasClass("imP") == false) {
                            $(this).hide();
                        }
                    }
                });
                var prepackTable = $(this).parent().parent().siblings("div").first().next().find("table");
                prepackTable.find("tr").each(function (i, tr) {
                    if ($(this).hasClass(className) == false) {
                        if ($(this).hasClass("imP") == false) {
                            $(this).hide();
                        }
                    }
                });
            }
        });
        $("#dialog").dialog({
            autoOpen: false,
            modal: true,
            draggable: true,
            width: '35%',
            close: function () {
                $("#txtAddress").val("");
                $("#txtSubject").val("");
                $("#txtMessage").val("");
                $("#hideInfo").prop("checked", false);
                $("#dialog").removeClass("bgClass4");
            }
        });
        $("#RelatedColorDialog").dialog({
            autoOpen: false,
            modal: true,
            width: "90%",
            close: function () {
                $("#RelatedColorDialog").empty();
            }
        });
        $(".imgClearance").click(function () {
            var clearance = -1;
            if ($(this).attr("src") == "@Url.Content("~/Styles/images/btnClearance.png")") {
                $(this).attr("src", "@Url.Content("~/Styles/images/btnClearance_color.png")");
                clearance = 1;
            }
            else {
                $(this).attr("src", "@Url.Content("~/Styles/images/btnClearance.png")");
                clearance = 0;
            }
            if (clearance >= 0) {
                var id = $(this).data("id");
                $(".clearance_" + id).val(clearance);
                $(".clearance_" + id).change();
                $("#loaderDiv" + id).show();
                $.post("@Url.Action("UpdateClearance", "Home", new { area = "" })", { clr: clearance, cId: id }).done(function (data) {
                    $("#loaderDiv" + id).hide();
                });
            }
        });
    });
    $("#clearSearchBtn").on("click", function () {
        @*var TypeId = $('#TypeId').val();
        $.get("@Url.Action("LineSheet", "Home")", { TypeId: TypeId }).done(function (data) {*@
        var win = window.location.href;
        var url = win.split('&').pop();
        win = win.replace('&' + url, '');
        window.location = win;
        //});
    });
    $(".numOnly").keydown(function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A
            (e.keyCode == 65 && e.ctrlKey === true) ||
            // Allow: home, end, left, right, down, up
            (e.keyCode >= 35 && e.keyCode <= 40)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    });
    $(".ddlSelect").change(function () {
        var className = $(this).val();
        var id = $(this).attr('dataid');
        if (className != '') {
            var opensizeTable = $(this).parent().parent().siblings("div").first().find("table");
            var prepackTable = $(this).parent().parent().siblings("div").first().next().find("table");
            opensizeTable.show();
            prepackTable.show();
            opensizeTable.find('tr').each(function () {

                if ($(this).hasClass(className) || $(this).hasClass("imP")) {
                    $(this).show();
                }
                else {
                    $(this).hide();
                }
            });
            prepackTable.find('tr').each(function () {

                if ($(this).hasClass(className) || $(this).hasClass("imP")) {
                    $(this).show();
                }
                else {
                    $(this).hide();
                }
            });
            if (opensizeTable.find("tr." + className).length <= 0) {
                opensizeTable.hide();
            }
            if (prepackTable.find("tr." + className).length <= 0) {
                prepackTable.hide();
            }
        }
        $(".lblQuant" + id).text("0");
        $(".lblTotal" + id).text("0.00");
    });
    $(".opcal1").change(function () {
        var ord = parseInt($(this).val());
        var avl = parseInt($(this).siblings(".hidOs").val());
        var id = $(this).attr('dataid');
        var price = $(this).attr('dataprc');
        if ((avl >= ord) && (ord > 0) && (avl > 0)) {
            var name = $(this).attr('name');
            var parts = name.split('.');
            if ($("input[name='" + parts[0] + ".isSelected']").length != 0)
                $("input[name='" + parts[0] + ".isSelected']").prop('checked', true);
        }
        else {
            $(this).val("");
            alert("You can't order this quantity for this pack");
        }
        doCalc(id, price);
    });
    $(".opcal2").change(function () {
        var ord = parseInt($(this).val());
        var avl = parseInt($(this).siblings(".hidAp").val());
        var id = $(this).attr('dataid');
        var price = $(this).attr('dataprc');
        if ((avl >= ord) && (ord > 0) && (avl > 0)) {
            var name = $(this).attr('name');
            var parts = name.split('.');
            if ($("input[name='" + parts[0] + ".isSelected']").length != 0)
                $("input[name='" + parts[0] + ".isSelected']").prop('checked', true);
        }
        else {
            $(this).val("");
            alert("You can't order this quantity for this pack");
        }
        doCalc(id, price);
    });
    function doCalc(id, price) {
        var tot = 0;
        var qty = 0;
        $(".txtOs" + id).each(function () {
            if ($(this).is(":visible")) {
                if (parseInt($(this).val()) > 0) {
                    qty += parseInt($(this).val());
                }
            }
        });
        $(".txtAp" + id).each(function () {
            if ($(this).is(":visible")) {
                if (parseInt($(this).val()) > 0) {
                    qty += (parseInt($(this).val()) * parseInt($(this).attr('title')));
                }
            }
        });
        tot = price * qty;
        $(".lblQuant" + id).text(qty);
        $(".lblTotal" + id).text(parseFloat(tot).toFixed(2));
    }

    $("#SaveAllIds").click(function () {
        $(".divCheck").each(function () {
            $(this).prop("checked", true);
        });
        $("#linesheetForm").submit();
    });
    $("#AddNewIds").click(function () {
        window.location = '@Url.Action("MassUpload", "Clothes", new { @area = "Admin" })';
    });
    $("#SaveNewId").click(function () {
        var total = parseInt($("#TotalClothes").val());
        $.post('@Url.Action("AddNewTemplate")', { Id: $(".divCheck").last().attr('dataval'), "gid": total }).done(function (data) {
            $('#linesheetTable > tbody:last').append(data);
        });
    });
    $("#activateClothes").click(function () {
        var selectedClothIds = new Array();

        $(".divCheck:checked").each(function () {
            var id = $(this).attr('dataval');
            selectedClothIds.push(id);
        });
        if (selectedClothIds.length > 0) {
            $.ajax({
                type: "POST",
                traditional: true,
                async: false,
                url: "@(Url.Action("ActivateFutureClothes", "Home", new { @area = "Common" }))",
                data: { "selectedClothIds": selectedClothIds },
                success: function () {
                    location.reload();
                },
                error: function () { alert('An error occured while saving.') }
            });
        }
        else {
            alert("Please select one item.");
        }
    });


    $(".clearanceAll").click(function () {
        var values = [];
        $(".divCheck:checked").each(function () {
            var id = $(this).attr('dataval');
            values.push({
                Id: id,
                Value: $(".clearance_" + id).val()
            });
        });
        if (values.length > 0) {
            $.ajax({
                type: "POST",
                url: "@(Url.Action("UpdateClearances","Home"))",
                contentType: "application/json",
                data: JSON.stringify(values),
                success: function () {
                    window.location = window.location;
                }
            });
        }
    });

    $("#showHideImagae").click(function () {
        $(".hideMe").toggle();
        $(this).toggleText("Hide Images", "Show Images");
    });
    $(".AddNewScale").click(function (elm) {
        var exist = $(this).parent().find(".scalediv").length;
        if (exist == 0) {
            var elmData = $(this).attr('data-val');
            var res = elmData.split("-");
            var elm = $(this).parent();
            if ($("input[name='[" + res[1] + "].isSelected']").length != 0)
                $("input[name='[" + res[1] + "].isSelected']").prop('checked', true);
            $.post('@Url.Action("AddNewScale")', { "id": parseInt(res[0]), "cid": parseInt(res[1]), "gid": parseInt(res[2]) }).done(function (data) {
                $(elm).append(data);
            });
        }
    });

    $(".checkMe").change(function () {
        var name = $(this).attr('name');
        var parts = name.split('.');
        if ($("input[name='" + parts[0] + ".isSelected']").length != 0)
            $("input[name='" + parts[0] + ".isSelected']").prop('checked', true);

    });

    $(".deletAll").click(function () {
        var any = $(".divCheck:checked").length > 0;
        if (any == true) {
            var Ids = [];
            $(".divCheck:checked").each(function () {
                Ids.push($(this).attr('dataval'));
            });
            if (confirm("Are you sure you want to delete the checked items?")) {
                $.post('@Url.Action("DeleteClothes", "Home")', $.param({ Ids: Ids }, true)).done(function (data) {
                    window.location = window.location.href;
                });
            }
        }
        else
            alert("Please check at least one checkbox");
    });

    $(".aRelcolor").click(function () {
        var id = parseInt($(this).attr('data-val'));
        var catid = parseInt($(this).attr('data-cat'));
        $.get("@Url.Action("GetAllColors", "Clothes", new { @area = "common" })", { categoryId: catid, clothId: id }).done(function (data) {
            $("#RelatedColorDialog").append(data);
            $("#RelatedColorDialog").dialog("open");
        });
    });

    $(".aRelProd").click(function () {
        var clothid = $(this).attr('data-val');
        $("#RelatedProductDialog").dialog();
        $("#RelatedProductDialog").dialog("option", "width", 800);
        $("#RelatedProductDialog").dialog("option", "height", 600);

        $.ajax({
            type: "GET",
            url: "@(Url.Action("GetRelatedProducts", "Home"))",
            data: { "clotheId": clothid },
            success: function (result) {
                debugger;
                $("#RelatedProductDialog").html('');
                $("#RelatedProductDialog").append(result);
            },
            error: function () { }
        });
    });
    $(".aImages").click(function () {
        var clothid = $(this).attr('data-val');


        $.get('@Url.Action("GetCloth")', { Id: clothid }).done(function (data) {
            $("#my_popup").dialog({
                autoOpen: false,
                modal: true,
                width: '35%',
                open: function () {
                    $(".upProgress").removeClass("upDone");
                    $('#dropLabel').empty().append('Drop files below!');
                },
                close: function () {
                    $("#my_popup").empty();
                    window.location = window.location.href;
                }
            });

            $("#my_popup").empty().append(data);
            $("#my_popup").dialog("open");
        });
    });
    $("#massUp").click(function () {
        var clothid = $(this).attr('data-val');


        $.get('@Url.Action("GetMultiCloth")', { Ids: clothid }).done(function (data) {
            $("#my_popup").dialog({
                autoOpen: false,
                modal: true,
                draggable: true,
                width: '35%',
                open: function () {
                    $(".upProgress").removeClass("upDone");
                    $('#dropLabel').empty().append('Drop files below!');
                },
                close: function () {
                    $("#my_popup").empty();
                    window.location = window.location.href;
                }
            });

            $("#my_popup").empty().append(data);
            $("#my_popup").dialog("open");
        });
    });

    function closeUpload() {
        $("#my_popup").dialog("close");

    }
    function saveSort() {
        var ids = [];
        $('.sortList').each(function (index, value) {
            var item = {};
            item.id = $(this).prop('id');
            item.so = index + 1;
            ids.push(item);
        });
        $.post(
            '@Url.Action("SaveSort", "Clothes", new { @area = "Admin" })',
            { NewOrders: JSON.stringify(ids) },
            function (response) {
                $("#my_popup").dialog("close");
            }
        );
    }
    function saveSortAll() {
        $(".sortButton").each(function () {
            $(this).click();
        });
        $("#my_popup").dialog("close");
    }
    $("#btnSubmitEmail").click(function () {
        var proceed = true;
        var self = $("#txtAddress");
        if (self.val() == '') {
            alert('Mail Id is required.');
            proceed = false;
        }
        var result = self.val().replace(/\s/g, "").split(/,|;/);
        var errors = [];
        if (proceed == true) {
            for (var i = 0; i < result.length; i++) {
                if (!validateEmail(result[i])) {
                    errors[i] = '`' + result[i] + '`';
                }
            }
            if (errors.length > 0) {
                alert('Please Check ' + errors.join(', ') + ' email addresses not valid!');
                proceed = false;
            }
            else {
                proceed = true;
            }
            if (proceed == true) {
                var ids = self.val();
                var sb = $("#txtSubject").val();
                var ms = $("#txtMessage").val();
                var sA = $(".checkAll").is(":checked");
                var hI = $("#hideInfo").is(":checked");
                var sI = $("#sendIds").val();
                var iM = $("#inMode").val();
                var future = $("#future").val();
                var deactive = $("#deactive").val();
                $("#dialog").addClass("bgClass4");
                $.post('@Url.Action("SendMail")', { ids: ids, Subject: sb, Message: ms, RefUrl: window.location.href, sA: sA, hI: hI, sI: sI, iM: iM, future: future, deactive: deactive }).done(function (data) {
                    $("#dialog").removeClass("bgClass4");
                    alert(data);
                    $("#dialog").dialog("close");
                });
            }
        }
    });
    function validateEmail(value) {
        var regex = /^([\w-\.]+@@([\w-]+\.)+[\w-]{2,4})?$/;
        return (regex.test(value)) ? true : false;
    }
</script>

