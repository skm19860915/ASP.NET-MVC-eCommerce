@using Platini.Models
@model DetailViewClass
@{
    bool showFit = Model.FitList.Any();
    var colors = new string[] { "Blue", "Red", "GoldenRod" };
    int colorIndex = 0;
    bool showWP = (!string.IsNullOrEmpty(SiteIdentity.UserId)) || (SiteIdentity.Type == CustomerType.Retail.ToString());
    bool showBreakPack = (!string.IsNullOrEmpty(SiteIdentity.UserId) && SiteIdentity.Roles.ToLower() != RolesEnum.Customer.ToString().ToLower() && SiteIdentity.Roles.ToLower() != RolesEnum.SalesPerson.ToString().ToLower());
}
@if (Platini.Models.SiteConfiguration.Mode.ToLower() == Platini.Models.ModeEnum.Order.ToString().ToLower())
{
    using (Html.BeginForm("Detail", "Home", FormMethod.Post, new { enctype = "multipart/form-data", id = "ord1Form" }))
    {
        <div class="popinner">
            <ul class="popCatBox">
                <li>
                    <div class="catLable" style="color: #666666;">Style</div>
                    <div class="filBix">@Model.StyleNumber</div>
                    @Html.HiddenFor(m => m.ClothesId, new { @class = "clothidClass" })
                    @Html.HiddenFor(m => m.Clearance)
                </li>
                @if (showWP)
                {
                    <li>
                        @if (Model.DiscountedPrice != null && Model.DiscountedPrice > 0 && Model.DiscountedPrice <= Model.Price)
                        {
                            <div class="catLable">Price $</div>
                            <div class="filBix"><span id="prc" class="prtpriceUse" title="@Model.DiscountedPrice">$@String.Format("{0:0.00}", Model.DiscountedPrice)</span></div>
                        }
                        else
                        {
                            <div class="catLable">Price $</div>
                            <div class="filBix"><span id="prc" class="prtpriceUse" title="@Model.Price">$@String.Format("{0:0.00}", Model.Price)</span></div>
                        }
                    </li>
                }
                <li>
                    @if (!String.IsNullOrEmpty(Platini.Models.SiteIdentity.UserId) && SiteIdentity.Type != ((int)CustomerType.Retail).ToString())
                    {
                        <div class="catLable">MSRP $</div>
                        <div class="filBix prtpriceUse" title="@Model.MSRP">$@String.Format("{0:0.00}", Model.MSRP)</div>
                    }
                    else
                    {
                        if (Model.DiscountedMSRP != null && (Model.DiscountedMSRP > 0 && Model.DiscountedMSRP < Model.MSRP))
                        {
                            <div class="catLable">MSRP $</div>
                            <div class="filBix prtpriceUse" title="@Model.DiscountedMSRP">$@String.Format("{0:0.00}", Model.DiscountedMSRP)</div>
                        }
                        else
                        {
                            <div class="catLable">MSRP $</div>
                            <div class="filBix prtpriceUse" title="@Model.MSRP">$@String.Format("{0:0.00}", Model.MSRP)</div>
                        }
                    }
                </li>
                @if (showFit)
                {
                    <li>
                        <div class="catLable">Fit</div>
                        <div class="filBix">
                            <select id="prtfitDdl" style="width: 100%; word-wrap: normal;">
                                @foreach (var fit in Model.FitList)
                                {
                                    <option value="@fit.Value.Replace(" ", "")">@fit.Value</option>
                                }
                            </select>
                        </div>
                    </li>
                }
                @if (!string.IsNullOrEmpty(Model.Color))
                {
                    <li>
                        <div class="catLable">Color</div>
                        <div class="filBix">
                            <button type="button">@Model.Color</button>
                        </div>
                    </li>
                }
            </ul>
            @if (Model.AvailableOpenSizes.Count > 0)
            {
                <div class="itemOS" style="width: 55%; display: inline-block;">
                    @for (int i = 0; i < Model.AvailableOpenSizes.Count; i++)
                    {
                        <div class="prtpopsize@(Model.AvailableOpenSizes[i].FitId.HasValue ? " " + Model.AvailableOpenSizes[i].FitName.Replace(" ", "") : "")">
                            @if (!string.IsNullOrEmpty(Model.AvailableOpenSizes[i].InseamName))
                            {
                                <div class="redl ic">@Model.AvailableOpenSizes[i].InseamName</div>
                            }
                            <ul class="sizeul">
                                @for (int j = 0; j < Model.AvailableOpenSizes[i].ClothesScaleSizeClass.Count; j++)
                                {
                                    <li>
                                        <span>@Model.AvailableOpenSizes[i].ClothesScaleSizeClass[j].SizeName</span>
                                        <span class="inpoubox">
                                            @{bool isOpen = (Model.AvailableOpenSizes[i].ClothesScaleSizeClass[j].Quantity.HasValue ? Model.AvailableOpenSizes[i].ClothesScaleSizeClass[j].Quantity.Value > 0 : false);}
                                            @if (isOpen)
                                            {
                                                <input type="text" data-val="@Model.AvailableOpenSizes[i].ClothesScaleSizeClass[j].Quantity.Value" value="" maxlength="3" class="effect numOnly prtopcal" onfocus="this.select();" onmouseup="return false;">
                                                @Html.HiddenFor(m => Model.AvailableOpenSizes[i].ClothesScaleSizeClass[j].Quantity, new { @class = "prthidOSClass" })
                                                @Html.HiddenFor(m => Model.AvailableOpenSizes[i].ClothesScaleSizeClass[j].ClothesScaleSizeId)
                                            }
                                            else
                                            {
                                                @Html.TextBox("oS" + Model.AvailableOpenSizes[i].ClothesScaleSizeClass[j].ClothesScaleSizeId, "X", new { @class = "disabledbutton", disabled = "disabled" })
                                            }
                                            @Html.HiddenFor(m => Model.AvailableOpenSizes[i].ClothesScaleSizeClass[j].ClothesScaleSizeId)
                                        </span>
                                    </li>

                                }
                                @Html.HiddenFor(m => Model.AvailableOpenSizes[i].ClothesScaleId)
                            </ul>
                        </div>

                    }
                </div>
            }
            @if (Model.Images.Any())
            {
                <div style="display: inline-block; width: 10%; vertical-align: top;">
                    <img src="/Library/Uploads/mobilethumb/@Model.Images.FirstOrDefault().ImagePath" style="width: 64px;">
                </div>
            }
        </div>
        if (Model.AvailablePrePacks.Any(x => x.InvQty > 0 && x.ClothesScaleSizeClass.Sum(y => y.Quantity) > 0 && !string.IsNullOrEmpty(x.Name)))
        {
            <div class="topRor">Available pre-packs &nbsp;<img src="~/Styles/images/q.png" id="imgTip" title="To add a product to your order, please click on “Add To Order”. Then Click on the Arrow that pops up on the left side of the page to view your order." alt=""></div>
            <div class="twr">


                @for (int k = 0; k < Model.AvailablePrePacks.Count; k++)
                {
                    if (Model.AvailablePrePacks[k].InvQty > 0 && !string.IsNullOrEmpty(Model.AvailablePrePacks[k].Name) && Model.AvailablePrePacks[k].ClothesScaleSizeClass.Sum(y => y.Quantity) > 0)
                    {
                        <div class="prtpopsize@(Model.AvailablePrePacks[k].FitId.HasValue ? " itemAP " + Model.AvailablePrePacks[k].FitName.Replace(" ", "") : "")">

                            <div class="redl fc">Scale @Model.AvailablePrePacks[k].Name</div>
                            @if (!string.IsNullOrEmpty(Model.AvailablePrePacks[k].InseamName))
                            {
                                <div class="redl ic">@Model.AvailablePrePacks[k].InseamName</div>
                            }
                            <div class="@(showBreakPack && string.IsNullOrEmpty(Model.AvailablePrePacks[k].InseamName) ? "wideP" : (!showBreakPack ? (!string.IsNullOrEmpty((Model.AvailablePrePacks[k].InseamName)) ? "cmpctP" : "avgP") : "avgP"))">
                                <ul class="sizeul">
                                    @for (int l = 0; l < Model.AvailablePrePacks[k].ClothesScaleSizeClass.Count; l++)
                                    {
                                        <li>
                                            <span>@Model.AvailablePrePacks[k].ClothesScaleSizeClass[l].SizeName</span>
                                            <span class="inpoubox">
                                                @if (Model.AvailablePrePacks[k].ClothesScaleSizeClass[l].Quantity.HasValue ? Model.AvailablePrePacks[k].ClothesScaleSizeClass[l].Quantity.Value > 0 : false)
                                                {
                                                    @Html.TextBoxFor(m => Model.AvailablePrePacks[k].ClothesScaleSizeClass[l].Quantity, new { @class = "disabledbutton", disabled = "disabled" })
                                                }
                                                else
                                                {
                                                    @Html.TextBox("aP" + Model.AvailablePrePacks[k].ClothesScaleSizeClass[l].ClothesScaleSizeId, "X", new { @class = "disabledbutton", disabled = "disabled" })
                                                }
                                                @Html.HiddenFor(m => Model.AvailablePrePacks[k].ClothesScaleSizeClass[l].ClothesScaleSizeId)
                                            </span>
                                        </li>
                                    }
                                    <li>
                                        <span>Tot</span>
                                        <span class="inpoubox">
                                            @Html.TextBox("Total" + Model.AvailablePrePacks[k].ClothesScaleId, Model.AvailablePrePacks[k].ClothesScaleSizeClass.Sum(x => x.Quantity), new { @class = "disabledbutton addQty", disabled = "disabled" })
                                        </span>
                                    </li>
                                    @if (showBreakPack)
                                    {
                                        <li>
                                            <span></span>
                                            <span class="inpoubox">
                                                <input type="button" style="margin-top:17px;" value="Break" class="prtbtnbreak btnOrder">
                                                @Html.HiddenFor(m => Model.AvailablePrePacks[k].ClothesScaleId, new { @class = "prthidClass" })
                                            </span>
                                        </li>
                                    }
                                    <li>
                                        <span>Qty</span>
                                        <span class="inpoubox">
                                            <input type="text" class="prtcls1 effect numOnly" title="@Model.AvailablePrePacks[k].ClothesScaleSizeClass.Sum(x => x.Quantity)"
                                                   onchange="prtcheckMe(@Model.AvailablePrePacks[k].InvQty,this);" value="" onfocus="this.select();" onmouseup="return false;">
                                            @Html.HiddenFor(m => Model.AvailablePrePacks[k].InvQty, new { @class = "prthidAPClass" })
                                        </span>
                                    </li>
                                </ul>
                            </div>
                            <div class=" clearfix"></div>
                            @Html.HiddenFor(m => Model.AvailablePrePacks[k].ClothesScaleId)
                        </div>
                    }
                    else
                    {@Html.HiddenFor(m => Model.AvailablePrePacks[k].ClothesScaleId)}
                }
            </div>
        }
        <div class="totalBox">
            <ul class="ttl">
                <li>Total Order Qty:<span id="prtttlQty">0</span></li>
                <li>Total $ <span id="prtttlPrc">0.00</span></li>
            </ul>
            <div class="adtoorder">
                @Html.Hidden("userId", SiteIdentity.UserId)
                <input id="prtbtnSubmit" class="btnOrder" type="button" value="Add To Order" />
            </div>
        </div>
    }
}
@if (Platini.Models.SiteConfiguration.Mode.ToLower() == Platini.Models.ModeEnum.Edit.ToString().ToLower())
{
    using (Html.BeginForm("EditClothe", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="popinner">
            <ul class="popCatBox">
                <li>
                    <div class="catLable" style="color: #666666;">Style</div>
                    <div class="filBix">@Model.StyleNumber</div>
                    @Html.HiddenFor(m => m.ClothesId, new { @class = "clothidClass" })
                    @Html.HiddenFor(m => m.Clearance)
                </li>
                @if (showWP)
                {
                    <li>
                        @if (Model.DiscountedPrice != null && Model.DiscountedPrice > 0 && Model.DiscountedPrice <= Model.Price)
                        {
                            <div class="catLable">Price $</div>
                            <div class="filBix"><span id="prc" class="prtpriceUse" title="@Model.DiscountedPrice">$@String.Format("{0:0.00}", Model.DiscountedPrice)</span></div>
                        }
                        else
                        {
                            <div class="catLable">Price $</div>
                            <div class="filBix"><span id="prc" class="prtpriceUse" title="@Model.Price">$@String.Format("{0:0.00}", Model.Price)</span></div>
                        }
                    </li>
                }
                <li>
                    @if (!String.IsNullOrEmpty(Platini.Models.SiteIdentity.UserId) && SiteIdentity.Type != ((int)CustomerType.Retail).ToString())
                    {
                        <div class="catLable">MSRP $</div>
                        <div class="filBix prtpriceUse" title="@Model.MSRP">$@String.Format("{0:0.00}", Model.MSRP)</div>
                    }
                    else
                    {
                        if (Model.DiscountedMSRP != null && (Model.DiscountedMSRP > 0 && Model.DiscountedMSRP < Model.MSRP))
                        {
                            <div class="catLable">MSRP $</div>
                            <div class="filBix prtpriceUse" title="@Model.DiscountedMSRP">$@String.Format("{0:0.00}", Model.DiscountedMSRP)</div>
                        }
                        else
                        {
                            <div class="catLable">MSRP $</div>
                            <div class="filBix prtpriceUse" title="@Model.MSRP">$@String.Format("{0:0.00}", Model.MSRP)</div>
                        }
                    }
                </li>
                @if (showFit)
                {
                    <li>
                        <div class="catLable">Fit</div>
                        <div class="filBix">
                            <select id="prtfitDdl" style="width: 100%; word-wrap: normal;">
                                @foreach (var fit in Model.FitList)
                                {
                                    <option value="@fit.Value.Replace(" ", "")">@fit.Value</option>
                                }
                            </select>
                        </div>
                    </li>
                }
                @if (!string.IsNullOrEmpty(Model.Color))
                {
                    <li>
                        <div class="catLable">Color</div>
                        <div class="filBix">
                            <button type="button">@Model.Color</button>
                        </div>
                    </li>
                }
            </ul>
            @if (Model.AvailableOpenSizes.Count > 0)
            {
                <div class="itemOS" style="width: 55%; display: inline-block;">
                    @for (int i = 0; i < Model.AvailableOpenSizes.Count; i++)
                    {
                        <div class="prtpopsize@(Model.AvailableOpenSizes[i].FitId.HasValue ? " " + Model.AvailableOpenSizes[i].FitName.Replace(" ", "") : "")">
                            @if (!string.IsNullOrEmpty(Model.AvailableOpenSizes[i].InseamName))
                            {
                                <div class="redl ic">@Model.AvailableOpenSizes[i].InseamName</div>
                            }
                            <ul class="sizeul">
                                @for (int j = 0; j < Model.AvailableOpenSizes[i].ClothesScaleSizeClass.Count; j++)
                                {
                                    <li>
                                        <span>@Model.AvailableOpenSizes[i].ClothesScaleSizeClass[j].SizeName</span>
                                        <span class="inpoubox">
                                            @Html.TextBoxFor(m => Model.AvailableOpenSizes[i].ClothesScaleSizeClass[j].Quantity, new { @style = "background:white", @maxlength = "3", @class = "effect numOnly", @onfocus = "this.select();", @onmouseup = "return false;" })
                                            @Html.HiddenFor(m => Model.AvailableOpenSizes[i].ClothesScaleSizeClass[j].ClothesScaleSizeId)
                                        </span>
                                    </li>

                                }
                                @Html.HiddenFor(m => Model.AvailableOpenSizes[i].ClothesScaleId)
                            </ul>
                        </div>

                    }
                </div>
            }
            @if (Model.Images.Any())
            {
                <div style="display: inline-block; width: 10%; vertical-align: top;">
                    <img src="/Library/Uploads/mobilethumb/@Model.Images.FirstOrDefault().ImagePath" style="width: 64px;">
                </div>
            }
        </div>
        if (Model.AvailablePrePacks.Any())
        {
            <div class="topRor">Available pre-packs &nbsp;<img src="~/Styles/images/q.png" id="imgTip" title="To add a product to your order, please click on “Add To Order”. Then Click on the Arrow that pops up on the left side of the page to view your order." alt=""></div>
            <div class="twr">


                @for (int k = 0; k < Model.AvailablePrePacks.Count; k++)
                {

                    <div class="prtpopsize@(Model.AvailablePrePacks[k].FitId.HasValue ? " itemAP " + Model.AvailablePrePacks[k].FitName.Replace(" ", "") : "")">

                        <div class="redl fc" style="width: auto">
                            @Html.TextBoxFor(m => Model.AvailablePrePacks[k].Name, new { @style = "width: 3em;text-align: center;padding: 3px;", @onfocus = "this.select();", @onmouseup = "return false;" })
                        </div>
                        @if (!string.IsNullOrEmpty(Model.AvailablePrePacks[k].InseamName))
                        {
                            <div class="redl ic" style="width: auto">
                                <select disabled="disabled" style="word-wrap: normal;">
                                    <option>@Model.AvailablePrePacks[k].InseamName</option>
                                </select>
                            </div>
                        }
                        <div class="@(showBreakPack && string.IsNullOrEmpty(Model.AvailablePrePacks[k].InseamName) ? "wideP" : (!showBreakPack ? (!string.IsNullOrEmpty((Model.AvailablePrePacks[k].InseamName)) ? "cmpctP" : "avgP") : "avgP"))">
                            <ul class="sizeul">
                                @for (int l = 0; l < Model.AvailablePrePacks[k].ClothesScaleSizeClass.Count; l++)
                                {
                                    <li>
                                        <span>@Model.AvailablePrePacks[k].ClothesScaleSizeClass[l].SizeName</span>
                                        <span class="inpoubox">
                                            @Html.HiddenFor(m => Model.AvailablePrePacks[k].ClothesScaleSizeClass[l].ClothesScaleSizeId)
                                            @Html.TextBoxFor(m => Model.AvailablePrePacks[k].ClothesScaleSizeClass[l].Quantity, new { @style = "background:white", @maxlength = "3", @class = "effect numOnly", @onfocus = "this.select();", @onmouseup = "return false;" })
                                        </span>
                                    </li>
                                }

                                <li>
                                    <span>Inv Qty</span>
                                    <span class="inpoubox">@Html.TextBoxFor(m => Model.AvailablePrePacks[k].InvQty, new { @onfocus = "this.select();", @onmouseup = "return false;" })</span>
                                </li>
                                @if (showBreakPack)
                                {
                                    <li>
                                        <span></span>
                                        <span class="inpoubox">
                                            <input type="button" style="margin-top:17px;" value="Break" class="prtbtnbreak btnOrder">
                                            @Html.HiddenFor(m => Model.AvailablePrePacks[k].ClothesScaleId, new { @class = "prthidClass" })
                                        </span>
                                    </li>
                                }
                            </ul>
                        </div>
                        <div class="clearfix"></div>
                        @Html.HiddenFor(m => Model.AvailablePrePacks[k].ClothesScaleId)
                    </div>
                }
            </div>
        }
        <div class="totalBox">

            <div class="adtoorder">
                <a href="@Url.Action("Step1", "Clothes", new { @area = "common", id = Model.ClothesId })" class="btnOrder">Edit</a>
                <input id="btnSave" type="submit" value="Save" class="btnOrder" />
            </div>
        </div>
    }
}
@if (Platini.Models.SiteConfiguration.Mode.ToLower() == Platini.Models.ModeEnum.View.ToString().ToLower())
{

    <div class="popinner">
        <ul class="popCatBox">
            <li>
                <div class="catLable" style="color: #666666;">Style</div>
                <div class="filBix">@Model.StyleNumber</div>
                @Html.HiddenFor(m => m.ClothesId, new { @class = "clothidClass" })
                @Html.HiddenFor(m => m.Clearance)
            </li>
            @if (showWP)
            {
                <li>
                    @if (Model.DiscountedPrice != null && Model.DiscountedPrice > 0 && Model.DiscountedPrice <= Model.Price)
                    {
                        <div class="catLable">Price $</div>
                        <div class="filBix"><span id="prc" title="@Model.DiscountedPrice">$@String.Format("{0:0.00}", Model.DiscountedPrice)</span></div>
                    }
                    else
                    {
                        <div class="catLable">Price $</div>
                        <div class="filBix"><span id="prc" title="@Model.Price">$@String.Format("{0:0.00}", Model.Price)</span></div>
                    }
                </li>
            }
            <li>
                @if (!String.IsNullOrEmpty(Platini.Models.SiteIdentity.UserId) && SiteIdentity.Type != ((int)CustomerType.Retail).ToString())
                {
                    <div class="catLable">MSRP $</div>
                    <div class="filBix prtpriceUse" title="@Model.MSRP">$@String.Format("{0:0.00}", Model.MSRP)</div>
                }
                else
                {
                    if (Model.DiscountedMSRP != null && (Model.DiscountedMSRP > 0 && Model.DiscountedMSRP < Model.MSRP))
                    {
                        <div class="catLable">MSRP $</div>
                        <div class="filBix prtpriceUse" title="@Model.DiscountedMSRP">$@String.Format("{0:0.00}", Model.DiscountedMSRP)</div>
                    }
                    else
                    {
                        <div class="catLable">MSRP $</div>
                        <div class="filBix prtpriceUse" title="@Model.MSRP">$@String.Format("{0:0.00}", Model.MSRP)</div>
                    }
                }
            </li>
            @if (showFit)
            {
                <li>
                    <div class="catLable">Fit</div>
                    <div class="filBix">
                        <select id="prtfitDdl" style="width: 100%; word-wrap: normal;">
                            @foreach (var fit in Model.FitList)
                            {
                                <option value="@fit.Value.Replace(" ", "")">@fit.Value</option>
                            }
                        </select>
                    </div>
                </li>
            }
            @if (!string.IsNullOrEmpty(Model.Color))
            {
                <li>
                    <div class="catLable">Color</div>
                    <div class="filBix">
                        <button type="button">@Model.Color</button>
                    </div>
                </li>
            }
        </ul>
        @if (Model.AvailableOpenSizes.Count > 0)
        {
            <div class="itemOS" style="width: 55%; display: inline-block;">
                @for (int i = 0; i < Model.AvailableOpenSizes.Count; i++)
                {
                    <div class="prtpopsize@(Model.AvailableOpenSizes[i].FitId.HasValue ? " " + Model.AvailableOpenSizes[i].FitName.Replace(" ", "") : "")">
                        @if (!string.IsNullOrEmpty(Model.AvailableOpenSizes[i].InseamName))
                        {
                            <div class="redl ic">@Model.AvailableOpenSizes[i].InseamName</div>
                        }
                        <ul class="sizeul">
                            @for (int j = 0; j < Model.AvailableOpenSizes[i].ClothesScaleSizeClass.Count; j++)
                            {
                                <li>
                                    <span>@Model.AvailableOpenSizes[i].ClothesScaleSizeClass[j].SizeName</span>
                                    <span class="inpoubox">
                                        @{bool isOpen = (Model.AvailableOpenSizes[i].ClothesScaleSizeClass[j].Quantity.HasValue ? Model.AvailableOpenSizes[i].ClothesScaleSizeClass[j].Quantity.Value > 0 : false);}
                                        @if (isOpen)
                                        {
                                            @Html.TextBoxFor(m => Model.AvailableOpenSizes[i].ClothesScaleSizeClass[j].Quantity, new { @class = "disabledbutton addQty", disabled = "disabled" })
                                        }
                                        else
                                        {
                                            @Html.TextBox("oS" + Model.AvailableOpenSizes[i].ClothesScaleSizeClass[j].ClothesScaleSizeId, "X", new { @class = "disabledbutton", disabled = "disabled" })
                                        }
                                        @Html.HiddenFor(m => Model.AvailableOpenSizes[i].ClothesScaleSizeClass[j].ClothesScaleSizeId)
                                    </span>
                                </li>

                            }
                            @Html.HiddenFor(m => Model.AvailableOpenSizes[i].ClothesScaleId)
                        </ul>
                    </div>

                }
            </div>
        }
        @if (Model.Images.Any())
        {
            <div style="display: inline-block; width: 10%; vertical-align: top;">
                <img src="/Library/Uploads/mobilethumb/@Model.Images.FirstOrDefault().ImagePath" style="width: 64px;">
            </div>
        }
    </div>

    if (Model.AvailablePrePacks.Any(x => x.InvQty > 0 && x.ClothesScaleSizeClass.Sum(y => y.Quantity) > 0 && !string.IsNullOrEmpty(x.Name)))
    {
        <div class="topRor">Available pre-packs &nbsp;<img src="~/Styles/images/q.png" id="imgTip" title="To add a product to your order, please click on “Add To Order”. Then Click on the Arrow that pops up on the left side of the page to view your order." alt=""></div>
        <div class="twr">

            @for (int k = 0; k < Model.AvailablePrePacks.Count; k++)
            {
                if (Model.AvailablePrePacks[k].InvQty > 0 && !string.IsNullOrEmpty(Model.AvailablePrePacks[k].Name) && Model.AvailablePrePacks[k].ClothesScaleSizeClass.Sum(y => y.Quantity) > 0)
                {
                    <div class="prtpopsize@(Model.AvailablePrePacks[k].FitId.HasValue ? " itemAP " + Model.AvailablePrePacks[k].FitName.Replace(" ", "") : "")">

                        <div class="redl fc">Scale @Model.AvailablePrePacks[k].Name</div>
                        @if (!string.IsNullOrEmpty(Model.AvailablePrePacks[k].InseamName))
                        {
                            <div class="redl ic">@Model.AvailablePrePacks[k].InseamName</div>
                        }
                        <div class="@(showBreakPack && string.IsNullOrEmpty(Model.AvailablePrePacks[k].InseamName) ? "wideP" : (!showBreakPack ? (!string.IsNullOrEmpty((Model.AvailablePrePacks[k].InseamName)) ? "cmpctP" : "avgP") : "avgP"))">
                            <ul class="sizeul">
                                @for (int l = 0; l < Model.AvailablePrePacks[k].ClothesScaleSizeClass.Count; l++)
                                {
                                    <li>
                                        <span>@Model.AvailablePrePacks[k].ClothesScaleSizeClass[l].SizeName</span>
                                        <span class="inpoubox">
                                            @if (Model.AvailablePrePacks[k].ClothesScaleSizeClass[l].Quantity.HasValue ? Model.AvailablePrePacks[k].ClothesScaleSizeClass[l].Quantity.Value > 0 : false)
                                            {
                                                @Html.TextBoxFor(m => Model.AvailablePrePacks[k].ClothesScaleSizeClass[l].Quantity, new { @class = "disabledbutton addQty", disabled = "disabled" })
                                            }
                                            else
                                            {
                                                @Html.TextBox("aP" + Model.AvailablePrePacks[k].ClothesScaleSizeClass[l].ClothesScaleSizeId, "X", new { @class = "disabledbutton", disabled = "disabled" })
                                            }
                                            @Html.HiddenFor(m => Model.AvailablePrePacks[k].ClothesScaleSizeClass[l].ClothesScaleSizeId)
                                        </span>
                                    </li>
                                }
                                <li>
                                    <span>Tot</span>
                                    <span class="inpoubox">
                                        @Html.TextBox("Total" + Model.AvailablePrePacks[k].ClothesScaleId, Model.AvailablePrePacks[k].ClothesScaleSizeClass.Sum(x => x.Quantity), new { @class = "disabledbutton addQty", disabled = "disabled" })
                                    </span>
                                </li>
                                @if (showBreakPack)
                                {
                                    <li>
                                        <span></span>
                                        <span class="inpoubox">
                                            <input type="button" style="margin-top:17px;" value="Break" class="prtbtnbreak btnOrder">
                                            @Html.HiddenFor(m => Model.AvailablePrePacks[k].ClothesScaleId, new { @class = "prthidClass" })
                                        </span>
                                    </li>
                                }
                                @if (SiteIdentity.Roles == RolesEnum.Admin.ToString() || SiteIdentity.Roles == RolesEnum.SuperAdmin.ToString())
                                {
                                    <li>
                                        <span>Qty</span>
                                        <span class="inpoubox">@Html.TextBoxFor(m => Model.AvailablePrePacks[k].InvQty, new { disabled = "disabled", @class = "disabledbutton" })</span>
                                    </li>
                                }
                            </ul>
                        </div>
                        <div class=" clearfix"></div>
                        @Html.HiddenFor(m => Model.AvailablePrePacks[k].ClothesScaleId)
                    </div>
                }
            }
        </div>
    }
}
<script type="text/javascript">
    $(document).ready(function () {

        $(".prtbtnbreak").click(function () {
            var id = parseInt($(this).siblings("input[type='hidden'].prthidClass").val());
            var cid = $('.clothidClass').val();
            $("#confirmMsg").text("Are you sure you want to break a pre-pack for this style?");
            $("#packBreak").show();
            $("#packBreak").attr("data-id", id);
            $("#hdnClothes").attr("data-id", cid);
            $("#openCart").hide();
            $(".closeBox ").click();
            $("#confirmmessage").click();

        });
        $("#btnOrderAll").click(function () {
            if ($("#userId").val() == "") {
                window.location.href = "/Home/Login?ReturnUrl=" + window.location.href;
            }
            else {
                var total = 0;
                $(".prtopcal").each(function () {
                    if ($(this).is(":visible")) {
                        $(this).siblings(".prthidOSClass").val("0");
                        var quant = $(this).val();
                        if (!isNaN(quant)) {
                            total += quant;
                            $(this).siblings(".prthidOSClass").val(quant);
                        }
                    }
                    else {
                        $(this).siblings(".prthidOSClass").val(quant);
                    }
                });
                $(".prtcls1").each(function () {
                    if ($(this).is(":visible")) {
                        $(this).siblings(".prthidAPClass").val("0");
                        var quant = $(this).val();
                        if (!isNaN(quant)) {
                            total += quant;
                            $(this).siblings(".prthidAPClass").val(quant);
                        }
                    }
                    else {
                        $(this).siblings(".prthidAPClass").val("0");
                    }
                });
                if (total == 0) {
                    var dialog = $('<p>Please enter quantity for any size.</p>').dialog({
                        resizable: false,
                        modal: true,
                        buttons: {
                            "OK": function () { dialog.dialog('close'); }
                        }
                    });
                }
                else {
                    $("#ord1Form").submit();
                }
            }
        });
        $("#tbGO").click(function () {
            $("#styleForm").click();
        });
    });

    function updateMode(val) {
        $.post('@Url.Action("UpdateMode", "Home", new { area = "" })', { Type: val }, function (data) {
            if (data.Response == "Success")
                window.location = window.location.href;
            else {
                var dialog = $('<p>Please enter quantity for any size.</p>').dialog({
                    resizable: false,
                    modal: true,
                    buttons: {
                        "OK": function () { dialog.dialog('close'); }
                    }
                });
            }
        });
    }


    $(function () {
        if ($("#prtfitDdl").length > 0) {
            $(".prtpopsize").each(function () {
                if (!$(this).hasClass($("#prtfitDdl").val())) {
                    $(this).hide();
                }
            });
        }
        $("#imgTip[title]").tooltip();
        $(".prtopcal").change(function () {
            var MaxVal = parseInt($(this).attr("data-val"));
            var currentVal = parseInt($(this).val());
            if (isNaN(MaxVal)) {
                MaxVal = 0;
            }
            if (!isNaN(currentVal)) {
                if (MaxVal < currentVal) {
                    $(this).val("");
                    var dialog = $('<p>You cannot order more than ' + MaxVal + ' quantity for this size</p>').dialog({
                        resizable: false,
                        modal: true,
                        buttons: {
                            "OK": function () { dialog.dialog('close'); }
                        }
                    });
                }
            }
            else {
                var dialog = $('<p>You cannot order more than ' + MaxVal + ' quantity for this size</p>').dialog({
                    resizable: false,
                    modal: true,
                    buttons: {
                        "OK": function () { dialog.dialog('close'); }
                    }
                });
            }
            prtdoCalc();
        });

        $("#prtfitDdl").change(function () {
            $(".prtpopsize").each(function () {
                if ($(this).hasClass($("#prtfitDdl").val())) {
                    $(this).show();
                }
                else {
                    $(this).hide();
                }
            });
        });

        $(".numOnly").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });
        $("#prtbtnSubmit").click(function () {
            if ($("#userId").val() == "") {
                window.location.href = "/Home/Login?ReturnUrl=" + window.location.href;
            }
            else {
                var total = 0;
                var isPre = false;
                var isOpen = false;
                var oQty = 0;
                $(".prtopcal").each(function () {
                    if ($(this).is(":visible")) {
                        $(this).siblings(".prthidOSClass").val("0");
                        var quant = $(this).val();
                        if (!isNaN(quant)) {
                            total += quant;
                            $(this).siblings(".prthidOSClass").val(quant);
                        }
                    }
                    else {
                        $(this).siblings(".prthidOSClass").val(quant);
                    }
                });
                isOpen = total > 0;
                oQty = total;
                $(".prtcls1").each(function () {
                    if ($(this).is(":visible")) {
                        $(this).siblings(".prthidAPClass").val("0");
                        var quant = $(this).val();
                        if (!isNaN(quant)) {
                            total += quant;
                            $(this).siblings(".prthidAPClass").val(quant);
                            isPre = true;
                        }
                    }
                    else {
                        $(this).siblings(".prthidAPClass").val("0");
                    }
                });
                isPre = total - oQty > 0;
                if (total == 0) {
                    var dialog = $('<p>Please enter quantity for any size.</p>').dialog({
                        resizable: false,
                        modal: true,
                        buttons: {
                            "OK": function () { dialog.dialog('close'); }
                        }
                    });
                }
                else {
                    $("#prtbtnSubmit").parent().addClass("bgClass5");
                    $.post('@Url.Action("ClothPresent", "Home")', { ClothesId: $("#ClothesId").val(), isPre: isPre, isOpen: isOpen }).done(function (data) {
                        $("#prtbtnSubmit").parent().removeClass("bgClass5");
                        if (data == "") {
                            $("#ord1Form").submit();
                        }
                        else {
                            $("#confirmMsg").text("This item is already in your cart for " + data + ". Would you like to add more qty of this style?");
                            $("#openCart").show();
                            $("#packBreak").hide();
                            $(".closeBox ").click();
                            $("#confirmmessage").click();
                        }
                    });
                }
            }
        });
    });
    function prtdoCalc() {
        var price = 0;
        if ($(".prtpriceUse").length > 0)
            price = parseFloat($(".prtpriceUse:first").attr("title")).toFixed(2);
        else
            price = 0;
        var total = 0;
        $(".prtopcal").each(function () {
            if ($(this).is(":visible")) {
                var quant = parseInt($(this).val());
                if (!isNaN(quant)) {
                    total = total + quant;
                }
            }
        });
        $(".prtcls1").each(function () {
            if ($(this).is(":visible")) {
                var quant = parseInt($(this).val());
                var item = parseInt($(this).attr("title"));
                if (!isNaN(quant) && !isNaN(item)) {
                    total = total + (quant * item);
                }
            }
        });
        $("#prtttlQty").empty().text(total);
        $("#prtttlPrc").empty().text(price * total);
    }

    function prtcheckMe(Total, elm) {

        var currentVal = parseInt($(elm).val());
        if (Total < currentVal) {
            $(elm).val("");
            var dialog = $('<p>You cannot order more than ' + Total + ' quantity for this pack</p>').dialog({
                resizable: false,
                modal: true,
                buttons: {
                    "OK": function () { dialog.dialog('close'); }
                }
            });
        }
        prtdoCalc();
    }

</script>
